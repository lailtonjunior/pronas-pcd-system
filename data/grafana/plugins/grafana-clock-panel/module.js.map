{"version":3,"file":"module.js","mappings":"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","sources":["webpack://grafana-clock-panel/external amd \"@grafana/ui\"","webpack://grafana-clock-panel/external amd \"@emotion/css\"","webpack://grafana-clock-panel/external amd \"module\"","webpack://grafana-clock-panel/../node_modules/moment-timezone/index.js","webpack://grafana-clock-panel/external amd \"moment\"","webpack://grafana-clock-panel/external amd \"@grafana/runtime\"","webpack://grafana-clock-panel/../node_modules/moment-timezone/moment-timezone.js","webpack://grafana-clock-panel/./external/moment-duration-format.js","webpack://grafana-clock-panel/external amd \"@grafana/data\"","webpack://grafana-clock-panel/external amd \"react\"","webpack://grafana-clock-panel/webpack/bootstrap","webpack://grafana-clock-panel/webpack/runtime/compat get default export","webpack://grafana-clock-panel/webpack/runtime/define property getters","webpack://grafana-clock-panel/webpack/runtime/hasOwnProperty shorthand","webpack://grafana-clock-panel/webpack/runtime/make namespace object","webpack://grafana-clock-panel/webpack/runtime/publicPath","webpack://grafana-clock-panel/./node_modules/grafana-public-path.js","webpack://grafana-clock-panel/./types.ts","webpack://grafana-clock-panel/./components/RenderDate.tsx","webpack://grafana-clock-panel/./components/RenderTime.tsx","webpack://grafana-clock-panel/./utils.ts","webpack://grafana-clock-panel/./components/RenderZone.tsx","webpack://grafana-clock-panel/./components/RenderDescription.tsx","webpack://grafana-clock-panel/./ColorEditor.tsx","webpack://grafana-clock-panel/./migrations.ts","webpack://grafana-clock-panel/./module.ts","webpack://grafana-clock-panel/./ClockPanel.tsx","webpack://grafana-clock-panel/./components/CalculateClockOptions.ts","webpack://grafana-clock-panel/./options.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__89__;","module.exports = __WEBPACK_EXTERNAL_MODULE__308__;","var moment = module.exports = require(\"./moment-timezone\");\nmoment.tz.load(require('./data/packed/latest.json'));\n","module.exports = __WEBPACK_EXTERNAL_MODULE__468__;","module.exports = __WEBPACK_EXTERNAL_MODULE__531__;","//! moment-timezone.js\n//! version : 0.5.47\n//! Copyright (c) JS Foundation and other contributors\n//! license : MIT\n//! github.com/moment/moment-timezone\n\n(function (root, factory) {\n\t\"use strict\";\n\n\t/*global define*/\n\tif (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = factory(require('moment')); // Node\n\t} else if (typeof define === 'function' && define.amd) {\n\t\tdefine(['moment'], factory);                 // AMD\n\t} else {\n\t\tfactory(root.moment);                        // Browser\n\t}\n}(this, function (moment) {\n\t\"use strict\";\n\n\t// Resolves es6 module loading issue\n\tif (moment.version === undefined && moment.default) {\n\t\tmoment = moment.default;\n\t}\n\n\t// Do not load moment-timezone a second time.\n\t// if (moment.tz !== undefined) {\n\t// \tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n\t// \treturn moment;\n\t// }\n\n\tvar VERSION = \"0.5.47\",\n\t\tzones = {},\n\t\tlinks = {},\n\t\tcountries = {},\n\t\tnames = {},\n\t\tguesses = {},\n\t\tcachedGuess;\n\n\tif (!moment || typeof moment.version !== 'string') {\n\t\tlogError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');\n\t}\n\n\tvar momentVersion = moment.version.split('.'),\n\t\tmajor = +momentVersion[0],\n\t\tminor = +momentVersion[1];\n\n\t// Moment.js version check\n\tif (major < 2 || (major === 2 && minor < 6)) {\n\t\tlogError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\n\t}\n\n\t/************************************\n\t\tUnpacking\n\t************************************/\n\n\tfunction charCodeToInt(charCode) {\n\t\tif (charCode > 96) {\n\t\t\treturn charCode - 87;\n\t\t} else if (charCode > 64) {\n\t\t\treturn charCode - 29;\n\t\t}\n\t\treturn charCode - 48;\n\t}\n\n\tfunction unpackBase60(string) {\n\t\tvar i = 0,\n\t\t\tparts = string.split('.'),\n\t\t\twhole = parts[0],\n\t\t\tfractional = parts[1] || '',\n\t\t\tmultiplier = 1,\n\t\t\tnum,\n\t\t\tout = 0,\n\t\t\tsign = 1;\n\n\t\t// handle negative numbers\n\t\tif (string.charCodeAt(0) === 45) {\n\t\t\ti = 1;\n\t\t\tsign = -1;\n\t\t}\n\n\t\t// handle digits before the decimal\n\t\tfor (i; i < whole.length; i++) {\n\t\t\tnum = charCodeToInt(whole.charCodeAt(i));\n\t\t\tout = 60 * out + num;\n\t\t}\n\n\t\t// handle digits after the decimal\n\t\tfor (i = 0; i < fractional.length; i++) {\n\t\t\tmultiplier = multiplier / 60;\n\t\t\tnum = charCodeToInt(fractional.charCodeAt(i));\n\t\t\tout += num * multiplier;\n\t\t}\n\n\t\treturn out * sign;\n\t}\n\n\tfunction arrayToInt (array) {\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tarray[i] = unpackBase60(array[i]);\n\t\t}\n\t}\n\n\tfunction intToUntil (array, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tarray[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds\n\t\t}\n\n\t\tarray[length - 1] = Infinity;\n\t}\n\n\tfunction mapIndices (source, indices) {\n\t\tvar out = [], i;\n\n\t\tfor (i = 0; i < indices.length; i++) {\n\t\t\tout[i] = source[indices[i]];\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction unpack (string) {\n\t\tvar data = string.split('|'),\n\t\t\toffsets = data[2].split(' '),\n\t\t\tindices = data[3].split(''),\n\t\t\tuntils  = data[4].split(' ');\n\n\t\tarrayToInt(offsets);\n\t\tarrayToInt(indices);\n\t\tarrayToInt(untils);\n\n\t\tintToUntil(untils, indices.length);\n\n\t\treturn {\n\t\t\tname       : data[0],\n\t\t\tabbrs      : mapIndices(data[1].split(' '), indices),\n\t\t\toffsets    : mapIndices(offsets, indices),\n\t\t\tuntils     : untils,\n\t\t\tpopulation : data[5] | 0\n\t\t};\n\t}\n\n\t/************************************\n\t\tZone object\n\t************************************/\n\n\tfunction Zone (packedString) {\n\t\tif (packedString) {\n\t\t\tthis._set(unpack(packedString));\n\t\t}\n\t}\n\n\tfunction closest (num, arr) {\n\t\tvar len = arr.length;\n\t\tif (num < arr[0]) {\n\t\t\treturn 0;\n\t\t} else if (len > 1 && arr[len - 1] === Infinity && num >= arr[len - 2]) {\n\t\t\treturn len - 1;\n\t\t} else if (num >= arr[len - 1]) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tvar mid;\n\t\tvar lo = 0;\n\t\tvar hi = len - 1;\n\t\twhile (hi - lo > 1) {\n\t\t\tmid = Math.floor((lo + hi) / 2);\n\t\t\tif (arr[mid] <= num) {\n\t\t\t\tlo = mid;\n\t\t\t} else {\n\t\t\t\thi = mid;\n\t\t\t}\n\t\t}\n\t\treturn hi;\n\t}\n\n\tZone.prototype = {\n\t\t_set : function (unpacked) {\n\t\t\tthis.name       = unpacked.name;\n\t\t\tthis.abbrs      = unpacked.abbrs;\n\t\t\tthis.untils     = unpacked.untils;\n\t\t\tthis.offsets    = unpacked.offsets;\n\t\t\tthis.population = unpacked.population;\n\t\t},\n\n\t\t_index : function (timestamp) {\n\t\t\tvar target = +timestamp,\n\t\t\t\tuntils = this.untils,\n\t\t\t\ti;\n\n\t\t\ti = closest(target, untils);\n\t\t\tif (i >= 0) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t},\n\n\t\tcountries : function () {\n\t\t\tvar zone_name = this.name;\n\t\t\treturn Object.keys(countries).filter(function (country_code) {\n\t\t\t\treturn countries[country_code].zones.indexOf(zone_name) !== -1;\n\t\t\t});\n\t\t},\n\n\t\tparse : function (timestamp) {\n\t\t\tvar target  = +timestamp,\n\t\t\t\toffsets = this.offsets,\n\t\t\t\tuntils  = this.untils,\n\t\t\t\tmax     = untils.length - 1,\n\t\t\t\toffset, offsetNext, offsetPrev, i;\n\n\t\t\tfor (i = 0; i < max; i++) {\n\t\t\t\toffset     = offsets[i];\n\t\t\t\toffsetNext = offsets[i + 1];\n\t\t\t\toffsetPrev = offsets[i ? i - 1 : i];\n\n\t\t\t\tif (offset < offsetNext && tz.moveAmbiguousForward) {\n\t\t\t\t\toffset = offsetNext;\n\t\t\t\t} else if (offset > offsetPrev && tz.moveInvalidForward) {\n\t\t\t\t\toffset = offsetPrev;\n\t\t\t\t}\n\n\t\t\t\tif (target < untils[i] - (offset * 60000)) {\n\t\t\t\t\treturn offsets[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn offsets[max];\n\t\t},\n\n\t\tabbr : function (mom) {\n\t\t\treturn this.abbrs[this._index(mom)];\n\t\t},\n\n\t\toffset : function (mom) {\n\t\t\tlogError(\"zone.offset has been deprecated in favor of zone.utcOffset\");\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t},\n\n\t\tutcOffset : function (mom) {\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t}\n\t};\n\n\t/************************************\n\t\tCountry object\n\t************************************/\n\n\tfunction Country (country_name, zone_names) {\n\t\tthis.name = country_name;\n\t\tthis.zones = zone_names;\n\t}\n\n\t/************************************\n\t\tCurrent Timezone\n\t************************************/\n\n\tfunction OffsetAt(at) {\n\t\tvar timeString = at.toTimeString();\n\t\tvar abbr = timeString.match(/\\([a-z ]+\\)/i);\n\t\tif (abbr && abbr[0]) {\n\t\t\t// 17:56:31 GMT-0600 (CST)\n\t\t\t// 17:56:31 GMT-0600 (Central Standard Time)\n\t\t\tabbr = abbr[0].match(/[A-Z]/g);\n\t\t\tabbr = abbr ? abbr.join('') : undefined;\n\t\t} else {\n\t\t\t// 17:56:31 CST\n\t\t\t// 17:56:31 GMT+0800 (台北標準時間)\n\t\t\tabbr = timeString.match(/[A-Z]{3,5}/g);\n\t\t\tabbr = abbr ? abbr[0] : undefined;\n\t\t}\n\n\t\tif (abbr === 'GMT') {\n\t\t\tabbr = undefined;\n\t\t}\n\n\t\tthis.at = +at;\n\t\tthis.abbr = abbr;\n\t\tthis.offset = at.getTimezoneOffset();\n\t}\n\n\tfunction ZoneScore(zone) {\n\t\tthis.zone = zone;\n\t\tthis.offsetScore = 0;\n\t\tthis.abbrScore = 0;\n\t}\n\n\tZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n\t\tthis.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);\n\t\tif (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\n\t\t\tthis.abbrScore++;\n\t\t}\n\t};\n\n\tfunction findChange(low, high) {\n\t\tvar mid, diff;\n\n\t\twhile ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {\n\t\t\tmid = new OffsetAt(new Date(low.at + diff));\n\t\t\tif (mid.offset === low.offset) {\n\t\t\t\tlow = mid;\n\t\t\t} else {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n\tfunction userOffsets() {\n\t\tvar startYear = new Date().getFullYear() - 2,\n\t\t\tlast = new OffsetAt(new Date(startYear, 0, 1)),\n\t\t\tlastOffset = last.offset,\n\t\t\toffsets = [last],\n\t\t\tchange, next, nextOffset, i;\n\n\t\tfor (i = 1; i < 48; i++) {\n\t\t\tnextOffset = new Date(startYear, i, 1).getTimezoneOffset();\n\t\t\tif (nextOffset !== lastOffset) {\n\t\t\t\t// Create OffsetAt here to avoid unnecessary abbr parsing before checking offsets\n\t\t\t\tnext = new OffsetAt(new Date(startYear, i, 1));\n\t\t\t\tchange = findChange(last, next);\n\t\t\t\toffsets.push(change);\n\t\t\t\toffsets.push(new OffsetAt(new Date(change.at + 6e4)));\n\t\t\t\tlast = next;\n\t\t\t\tlastOffset = nextOffset;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < 4; i++) {\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\n\t\t}\n\n\t\treturn offsets;\n\t}\n\n\tfunction sortZoneScores (a, b) {\n\t\tif (a.offsetScore !== b.offsetScore) {\n\t\t\treturn a.offsetScore - b.offsetScore;\n\t\t}\n\t\tif (a.abbrScore !== b.abbrScore) {\n\t\t\treturn a.abbrScore - b.abbrScore;\n\t\t}\n\t\tif (a.zone.population !== b.zone.population) {\n\t\t\treturn b.zone.population - a.zone.population;\n\t\t}\n\t\treturn b.zone.name.localeCompare(a.zone.name);\n\t}\n\n\tfunction addToGuesses (name, offsets) {\n\t\tvar i, offset;\n\t\tarrayToInt(offsets);\n\t\tfor (i = 0; i < offsets.length; i++) {\n\t\t\toffset = offsets[i];\n\t\t\tguesses[offset] = guesses[offset] || {};\n\t\t\tguesses[offset][name] = true;\n\t\t}\n\t}\n\n\tfunction guessesForUserOffsets (offsets) {\n\t\tvar offsetsLength = offsets.length,\n\t\t\tfilteredGuesses = {},\n\t\t\tout = [],\n\t\t\tcheckedOffsets = {},\n\t\t\ti, j, offset, guessesOffset;\n\n\t\tfor (i = 0; i < offsetsLength; i++) {\n\t\t\toffset = offsets[i].offset;\n\t\t\tif (checkedOffsets.hasOwnProperty(offset)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tguessesOffset = guesses[offset] || {};\n\t\t\tfor (j in guessesOffset) {\n\t\t\t\tif (guessesOffset.hasOwnProperty(j)) {\n\t\t\t\t\tfilteredGuesses[j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcheckedOffsets[offset] = true;\n\t\t}\n\n\t\tfor (i in filteredGuesses) {\n\t\t\tif (filteredGuesses.hasOwnProperty(i)) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction rebuildGuess () {\n\n\t\t// use Intl API when available and returning valid time zone\n\t\ttry {\n\t\t\tvar intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\t\tif (intlName && intlName.length > 3) {\n\t\t\t\tvar name = names[normalizeName(intlName)];\n\t\t\t\tif (name) {\n\t\t\t\t\treturn name;\n\t\t\t\t}\n\t\t\t\tlogError(\"Moment Timezone found \" + intlName + \" from the Intl api, but did not have that data loaded.\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Intl unavailable, fall back to manual guessing.\n\t\t}\n\n\t\tvar offsets = userOffsets(),\n\t\t\toffsetsLength = offsets.length,\n\t\t\tguesses = guessesForUserOffsets(offsets),\n\t\t\tzoneScores = [],\n\t\t\tzoneScore, i, j;\n\n\t\tfor (i = 0; i < guesses.length; i++) {\n\t\t\tzoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\n\t\t\tfor (j = 0; j < offsetsLength; j++) {\n\t\t\t\tzoneScore.scoreOffsetAt(offsets[j]);\n\t\t\t}\n\t\t\tzoneScores.push(zoneScore);\n\t\t}\n\n\t\tzoneScores.sort(sortZoneScores);\n\n\t\treturn zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\n\t}\n\n\tfunction guess (ignoreCache) {\n\t\tif (!cachedGuess || ignoreCache) {\n\t\t\tcachedGuess = rebuildGuess();\n\t\t}\n\t\treturn cachedGuess;\n\t}\n\n\t/************************************\n\t\tGlobal Methods\n\t************************************/\n\n\tfunction normalizeName (name) {\n\t\treturn (name || '').toLowerCase().replace(/\\//g, '_');\n\t}\n\n\tfunction addZone (packed) {\n\t\tvar i, name, split, normalized;\n\n\t\tif (typeof packed === \"string\") {\n\t\t\tpacked = [packed];\n\t\t}\n\n\t\tfor (i = 0; i < packed.length; i++) {\n\t\t\tsplit = packed[i].split('|');\n\t\t\tname = split[0];\n\t\t\tnormalized = normalizeName(name);\n\t\t\tzones[normalized] = packed[i];\n\t\t\tnames[normalized] = name;\n\t\t\taddToGuesses(normalized, split[2].split(' '));\n\t\t}\n\t}\n\n\tfunction getZone (name, caller) {\n\n\t\tname = normalizeName(name);\n\n\t\tvar zone = zones[name];\n\t\tvar link;\n\n\t\tif (zone instanceof Zone) {\n\t\t\treturn zone;\n\t\t}\n\n\t\tif (typeof zone === 'string') {\n\t\t\tzone = new Zone(zone);\n\t\t\tzones[name] = zone;\n\t\t\treturn zone;\n\t\t}\n\n\t\t// Pass getZone to prevent recursion more than 1 level deep\n\t\tif (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n\t\t\tzone = zones[name] = new Zone();\n\t\t\tzone._set(link);\n\t\t\tzone.name = names[name];\n\t\t\treturn zone;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getNames () {\n\t\tvar i, out = [];\n\n\t\tfor (i in names) {\n\t\t\tif (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out.sort();\n\t}\n\n\tfunction getCountryNames () {\n\t\treturn Object.keys(countries);\n\t}\n\n\tfunction addLink (aliases) {\n\t\tvar i, alias, normal0, normal1;\n\n\t\tif (typeof aliases === \"string\") {\n\t\t\taliases = [aliases];\n\t\t}\n\n\t\tfor (i = 0; i < aliases.length; i++) {\n\t\t\talias = aliases[i].split('|');\n\n\t\t\tnormal0 = normalizeName(alias[0]);\n\t\t\tnormal1 = normalizeName(alias[1]);\n\n\t\t\tlinks[normal0] = normal1;\n\t\t\tnames[normal0] = alias[0];\n\n\t\t\tlinks[normal1] = normal0;\n\t\t\tnames[normal1] = alias[1];\n\t\t}\n\t}\n\n\tfunction addCountries (data) {\n\t\tvar i, country_code, country_zones, split;\n\t\tif (!data || !data.length) return;\n\t\tfor (i = 0; i < data.length; i++) {\n\t\t\tsplit = data[i].split('|');\n\t\t\tcountry_code = split[0].toUpperCase();\n\t\t\tcountry_zones = split[1].split(' ');\n\t\t\tcountries[country_code] = new Country(\n\t\t\t\tcountry_code,\n\t\t\t\tcountry_zones\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction getCountry (name) {\n\t\tname = name.toUpperCase();\n\t\treturn countries[name] || null;\n\t}\n\n\tfunction zonesForCountry(country, with_offset) {\n\t\tcountry = getCountry(country);\n\n\t\tif (!country) return null;\n\n\t\tvar zones = country.zones.sort();\n\n\t\tif (with_offset) {\n\t\t\treturn zones.map(function (zone_name) {\n\t\t\t\tvar zone = getZone(zone_name);\n\t\t\t\treturn {\n\t\t\t\t\tname: zone_name,\n\t\t\t\t\toffset: zone.utcOffset(new Date())\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\treturn zones;\n\t}\n\n\tfunction loadData (data) {\n\t\taddZone(data.zones);\n\t\taddLink(data.links);\n\t\taddCountries(data.countries);\n\t\ttz.dataVersion = data.version;\n\t}\n\n\tfunction zoneExists (name) {\n\t\tif (!zoneExists.didShowError) {\n\t\t\tzoneExists.didShowError = true;\n\t\t\t\tlogError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n\t\t}\n\t\treturn !!getZone(name);\n\t}\n\n\tfunction needsOffset (m) {\n\t\tvar isUnixTimestamp = (m._f === 'X' || m._f === 'x');\n\t\treturn !!(m._a && (m._tzm === undefined) && !isUnixTimestamp);\n\t}\n\n\tfunction logError (message) {\n\t\tif (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t\t\tconsole.error(message);\n\t\t}\n\t}\n\n\t/************************************\n\t\tmoment.tz namespace\n\t************************************/\n\n\tfunction tz (input) {\n\t\tvar args = Array.prototype.slice.call(arguments, 0, -1),\n\t\t\tname = arguments[arguments.length - 1],\n\t\t\tout  = moment.utc.apply(null, args),\n\t\t\tzone;\n\n\t\tif (!moment.isMoment(input) && needsOffset(out) && (zone = getZone(name))) {\n\t\t\tout.add(zone.parse(out), 'minutes');\n\t\t}\n\n\t\tout.tz(name);\n\n\t\treturn out;\n\t}\n\n\ttz.version      = VERSION;\n\ttz.dataVersion  = '';\n\ttz._zones       = zones;\n\ttz._links       = links;\n\ttz._names       = names;\n\ttz._countries\t= countries;\n\ttz.add          = addZone;\n\ttz.link         = addLink;\n\ttz.load         = loadData;\n\ttz.zone         = getZone;\n\ttz.zoneExists   = zoneExists; // deprecated in 0.1.0\n\ttz.guess        = guess;\n\ttz.names        = getNames;\n\ttz.Zone         = Zone;\n\ttz.unpack       = unpack;\n\ttz.unpackBase60 = unpackBase60;\n\ttz.needsOffset  = needsOffset;\n\ttz.moveInvalidForward   = true;\n\ttz.moveAmbiguousForward = false;\n\ttz.countries    = getCountryNames;\n\ttz.zonesForCountry = zonesForCountry;\n\n\t/************************************\n\t\tInterface with Moment.js\n\t************************************/\n\n\tvar fn = moment.fn;\n\n\tmoment.tz = tz;\n\n\tmoment.defaultZone = null;\n\n\tmoment.updateOffset = function (mom, keepTime) {\n\t\tvar zone = moment.defaultZone,\n\t\t\toffset;\n\n\t\tif (mom._z === undefined) {\n\t\t\tif (zone && needsOffset(mom) && !mom._isUTC && mom.isValid()) {\n\t\t\t\tmom._d = moment.utc(mom._a)._d;\n\t\t\t\tmom.utc().add(zone.parse(mom), 'minutes');\n\t\t\t}\n\t\t\tmom._z = zone;\n\t\t}\n\t\tif (mom._z) {\n\t\t\toffset = mom._z.utcOffset(mom);\n\t\t\tif (Math.abs(offset) < 16) {\n\t\t\t\toffset = offset / 60;\n\t\t\t}\n\t\t\tif (mom.utcOffset !== undefined) {\n\t\t\t\tvar z = mom._z;\n\t\t\t\tmom.utcOffset(-offset, keepTime);\n\t\t\t\tmom._z = z;\n\t\t\t} else {\n\t\t\t\tmom.zone(offset, keepTime);\n\t\t\t}\n\t\t}\n\t};\n\n\tfn.tz = function (name, keepTime) {\n\t\tif (name) {\n\t\t\tif (typeof name !== 'string') {\n\t\t\t\tthrow new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');\n\t\t\t}\n\t\t\tthis._z = getZone(name);\n\t\t\tif (this._z) {\n\t\t\t\tmoment.updateOffset(this, keepTime);\n\t\t\t} else {\n\t\t\t\tlogError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif (this._z) { return this._z.name; }\n\t};\n\n\tfunction abbrWrap (old) {\n\t\treturn function () {\n\t\t\tif (this._z) { return this._z.abbr(this); }\n\t\t\treturn old.call(this);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap (old) {\n\t\treturn function () {\n\t\t\tthis._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap2 (old) {\n\t\treturn function () {\n\t\t\tif (arguments.length > 0) this._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfn.zoneName  = abbrWrap(fn.zoneName);\n\tfn.zoneAbbr  = abbrWrap(fn.zoneAbbr);\n\tfn.utc       = resetZoneWrap(fn.utc);\n\tfn.local     = resetZoneWrap(fn.local);\n\tfn.utcOffset = resetZoneWrap2(fn.utcOffset);\n\n\tmoment.tz.setDefault = function(name) {\n\t\tif (major < 2 || (major === 2 && minor < 9)) {\n\t\t\tlogError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\n\t\t}\n\t\tmoment.defaultZone = name ? getZone(name) : null;\n\t\treturn moment;\n\t};\n\n\t// Cloning a moment should include the _z property.\n\tvar momentProperties = moment.momentProperties;\n\tif (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n\t\t// moment 2.8.1+\n\t\tmomentProperties.push('_z');\n\t\tmomentProperties.push('_a');\n\t} else if (momentProperties) {\n\t\t// moment 2.7.0\n\t\tmomentProperties._z = null;\n\t}\n\n\t// INJECT DATA\n\n\treturn moment;\n}));\n","/* eslint-disable */\n/*! Moment Duration Format v2.2.1\n *  https://github.com/jsmreese/moment-duration-format\n *  Date: 2018-01-21\n *\n *  Duration format plugin function for the Moment.js library\n *  http://momentjs.com/\n *\n *  Copyright 2018 John Madhavan-Reese\n *  Released under the MIT license\n */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['moment'], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but only CommonJS-like\n        // enviroments that support module.exports, like Node.\n        try {\n            module.exports = factory(require('moment'));\n        } catch (e) {\n            // If moment is not available, leave the setup up to the user.\n            // Like when using moment-timezone or similar moment-based package.\n            module.exports = factory;\n        }\n    }\n\n    if (root) {\n        // Globals.\n        root.momentDurationFormatSetup = root.moment ? factory(root.moment) : factory;\n    }\n})(this, function (moment) {\n    // `Number#tolocaleString` is tested on plugin initialization.\n    // If the feature test passes, `toLocaleStringWorks` will be set to `true` and the\n    // native function will be used to generate formatted output. If the feature\n    // test fails, the fallback format function internal to this plugin will be\n    // used.\n    var toLocaleStringWorks = false;\n\n    // `Number#toLocaleString` rounds incorrectly for select numbers in Microsoft\n    // environments (Edge, IE11, Windows Phone) and possibly other environments.\n    // If the rounding test fails and `toLocaleString` will be used for formatting,\n    // the plugin will \"pre-round\" number values using the fallback number format\n    // function before passing them to `toLocaleString` for final formatting.\n    var toLocaleStringRoundingWorks = false;\n\n    // Token type names in order of descending magnitude.\n    var types = \"escape years months weeks days hours minutes seconds milliseconds general\".split(\" \");\n\n    var bubbles = [\n        {\n            type: \"seconds\",\n            targets: [\n                { type: \"minutes\", value: 60 },\n                { type: \"hours\", value: 3600 },\n                { type: \"days\", value: 86400 },\n                { type: \"weeks\", value: 604800 },\n                { type: \"months\", value: 2678400 },\n                { type: \"years\", value: 31536000 }\n            ]\n        },\n        {\n            type: \"minutes\",\n            targets: [\n                { type: \"hours\", value: 60 },\n                { type: \"days\", value: 1440 },\n                { type: \"weeks\", value: 10080 },\n                { type: \"months\", value: 44640 },\n                { type: \"years\", value: 525600 }\n            ]\n        },\n        {\n            type: \"hours\",\n            targets: [\n                { type: \"days\", value: 24 },\n                { type: \"weeks\", value: 168 },\n                { type: \"months\", value: 744 },\n                { type: \"years\", value: 8760 }\n            ]\n        },\n        {\n            type: \"days\",\n            targets: [\n                { type: \"weeks\", value: 7 },\n                { type: \"months\", value: 31 },\n                { type: \"years\", value: 365 }\n            ]\n        },\n        {\n            type: \"months\",\n            targets: [\n                { type: \"years\", value: 12 }\n            ]\n        }\n    ];\n\n    // stringIncludes\n    function stringIncludes(str, search) {\n        if (search.length > str.length) {\n          return false;\n        }\n\n        return str.indexOf(search) !== -1;\n    }\n\n    // repeatZero(qty)\n    // Returns \"0\" repeated `qty` times.\n    // `qty` must be a integer >= 0.\n    function repeatZero(qty) {\n        var result = \"\";\n\n        while (qty) {\n            result += \"0\";\n            qty -= 1;\n        }\n\n        return result;\n    }\n\n    function stringRound(digits) {\n        var digitsArray = digits.split(\"\").reverse();\n        var i = 0;\n        var carry = true;\n\n        while (carry && i < digitsArray.length) {\n            if (i) {\n                if (digitsArray[i] === \"9\") {\n                    digitsArray[i] = \"0\";\n                } else {\n                    digitsArray[i] = (parseInt(digitsArray[i], 10) + 1).toString();\n                    carry = false;\n                }\n            } else {\n                if (parseInt(digitsArray[i], 10) < 5) {\n                    carry = false;\n                }\n\n                digitsArray[i] = \"0\";\n            }\n\n            i += 1;\n        }\n\n        if (carry) {\n            digitsArray.push(\"1\");\n        }\n\n        return digitsArray.reverse().join(\"\");\n    }\n\n    // formatNumber\n    // Formats any number greater than or equal to zero using these options:\n    // - userLocale\n    // - useToLocaleString\n    // - useGrouping\n    // - grouping\n    // - maximumSignificantDigits\n    // - minimumIntegerDigits\n    // - fractionDigits\n    // - groupingSeparator\n    // - decimalSeparator\n    //\n    // `useToLocaleString` will use `toLocaleString` for formatting.\n    // `userLocale` option is passed through to `toLocaleString`.\n    // `fractionDigits` is passed through to `maximumFractionDigits` and `minimumFractionDigits`\n    // Using `maximumSignificantDigits` will override `minimumIntegerDigits` and `fractionDigits`.\n    function formatNumber(number, options, userLocale) {\n        var useToLocaleString = options.useToLocaleString;\n        var useGrouping = options.useGrouping;\n        var grouping = useGrouping && options.grouping.slice();\n        var maximumSignificantDigits = options.maximumSignificantDigits;\n        var minimumIntegerDigits = options.minimumIntegerDigits || 1;\n        var fractionDigits = options.fractionDigits || 0;\n        var groupingSeparator = options.groupingSeparator;\n        var decimalSeparator = options.decimalSeparator;\n\n        if (useToLocaleString && userLocale) {\n            var localeStringOptions = {\n                minimumIntegerDigits: minimumIntegerDigits,\n                useGrouping: useGrouping\n            };\n\n            if (fractionDigits) {\n                localeStringOptions.maximumFractionDigits = fractionDigits;\n                localeStringOptions.minimumFractionDigits = fractionDigits;\n            }\n\n            // toLocaleString output is \"0.0\" instead of \"0\" for HTC browsers\n            // when maximumSignificantDigits is set. See #96.\n            if (maximumSignificantDigits && number > 0) {\n                localeStringOptions.maximumSignificantDigits = maximumSignificantDigits;\n            }\n\n            if (!toLocaleStringRoundingWorks) {\n                var roundingOptions = extend({}, options);\n                roundingOptions.useGrouping = false;\n                roundingOptions.decimalSeparator = \".\";\n                number = parseFloat(formatNumber(number, roundingOptions), 10);\n            }\n\n            return number.toLocaleString(userLocale, localeStringOptions);\n        }\n\n        var numberString;\n\n        // Add 1 to digit output length for floating point errors workaround. See below.\n        if (maximumSignificantDigits) {\n            numberString = number.toPrecision(maximumSignificantDigits + 1);\n        } else {\n            numberString = number.toFixed(fractionDigits + 1);\n        }\n\n        var integerString;\n        var fractionString;\n        var exponentString;\n\n        var temp = numberString.split(\"e\");\n\n        exponentString = temp[1] || \"\";\n\n        temp = temp[0].split(\".\");\n\n        fractionString = temp[1] || \"\";\n        integerString = temp[0] || \"\";\n\n        // Workaround for floating point errors in `toFixed` and `toPrecision`.\n        // (3.55).toFixed(1); --> \"3.5\"\n        // (123.55 - 120).toPrecision(2); --> \"3.5\"\n        // (123.55 - 120); --> 3.549999999999997\n        // (123.55 - 120).toFixed(2); --> \"3.55\"\n        // Round by examing the string output of the next digit.\n\n        // *************** Implement String Rounding here ***********************\n        // Check integerString + fractionString length of toPrecision before rounding.\n        // Check length of fractionString from toFixed output before rounding.\n        var integerLength = integerString.length;\n        var fractionLength = fractionString.length;\n        var digitCount = integerLength + fractionLength;\n        var digits = integerString + fractionString;\n\n        if (maximumSignificantDigits && digitCount === (maximumSignificantDigits + 1) || !maximumSignificantDigits && fractionLength === (fractionDigits + 1)) {\n            // Round digits.\n            digits = stringRound(digits);\n\n            if (digits.length === digitCount + 1) {\n                integerLength = integerLength + 1;\n            }\n\n            // Discard final fractionDigit.\n            if (fractionLength) {\n                digits = digits.slice(0, -1);\n            }\n\n            // Separate integer and fraction.\n            integerString = digits.slice(0, integerLength);\n            fractionString = digits.slice(integerLength);\n        }\n\n        // Trim trailing zeroes from fractionString because toPrecision outputs\n        // precision, not significant digits.\n        if (maximumSignificantDigits) {\n            fractionString = fractionString.replace(/0*$/, \"\");\n        }\n\n        // Handle exponent.\n        var exponent = parseInt(exponentString, 10);\n\n        if (exponent > 0) {\n            if (fractionString.length <= exponent) {\n                fractionString = fractionString + repeatZero(exponent - fractionString.length);\n\n                integerString = integerString + fractionString;\n                fractionString = \"\";\n            } else {\n                integerString = integerString + fractionString.slice(0, exponent);\n                fractionString = fractionString.slice(exponent);\n            }\n        } else if (exponent < 0) {\n            fractionString = (repeatZero(Math.abs(exponent) - integerString.length) + integerString + fractionString);\n\n            integerString = \"0\";\n        }\n\n        if (!maximumSignificantDigits) {\n            // Trim or pad fraction when not using maximumSignificantDigits.\n            fractionString = fractionString.slice(0, fractionDigits);\n\n            if (fractionString.length < fractionDigits) {\n                fractionString = fractionString + repeatZero(fractionDigits - fractionString.length);\n            }\n\n            // Pad integer when using minimumIntegerDigits\n            // and not using maximumSignificantDigits.\n            if (integerString.length < minimumIntegerDigits) {\n                integerString = repeatZero(minimumIntegerDigits - integerString.length) + integerString;\n            }\n        }\n\n        var formattedString = \"\";\n\n        // Handle grouping.\n        if (useGrouping) {\n            temp = integerString;\n            var group;\n\n            while (temp.length) {\n                if (grouping.length) {\n                    group = grouping.shift();\n                }\n\n                if (formattedString) {\n                    formattedString = groupingSeparator + formattedString;\n                }\n\n                formattedString = temp.slice(-group) + formattedString;\n\n                temp = temp.slice(0, -group);\n            }\n        } else {\n            formattedString = integerString;\n        }\n\n        // Add decimalSeparator and fraction.\n        if (fractionString) {\n            formattedString = formattedString + decimalSeparator + fractionString;\n        }\n\n        return formattedString;\n    }\n\n    // durationLabelCompare\n    function durationLabelCompare(a, b) {\n        if (a.label.length > b.label.length) {\n            return -1;\n        }\n\n        if (a.label.length < b.label.length) {\n            return 1;\n        }\n\n        // a must be equal to b\n        return 0;\n    }\n\n    // durationGetLabels\n    function durationGetLabels(token, localeData) {\n        var labels = [];\n\n        each(keys(localeData), function (localeDataKey) {\n            if (localeDataKey.slice(0, 15) !== \"_durationLabels\") {\n                return;\n            }\n\n            var labelType = localeDataKey.slice(15).toLowerCase();\n\n            each(keys(localeData[localeDataKey]), function (labelKey) {\n                if (labelKey.slice(0, 1) === token) {\n                    labels.push({\n                        type: labelType,\n                        key: labelKey,\n                        label: localeData[localeDataKey][labelKey]\n                    });\n                }\n            });\n        });\n\n        return labels;\n    }\n\n    // durationPluralKey\n    function durationPluralKey(token, integerValue, decimalValue) {\n        // Singular for a value of `1`, but not for `1.0`.\n        if (integerValue === 1 && decimalValue === null) {\n            return token;\n        }\n\n        return token + token;\n    }\n\n    var engLocale = {\n        durationLabelsStandard: {\n            S: 'millisecond',\n            SS: 'milliseconds',\n            s: 'second',\n            ss: 'seconds',\n            m: 'minute',\n            mm: 'minutes',\n            h: 'hour',\n            hh: 'hours',\n            d: 'day',\n            dd: 'days',\n            w: 'week',\n            ww: 'weeks',\n            M: 'month',\n            MM: 'months',\n            y: 'year',\n            yy: 'years'\n        },\n        durationLabelsShort: {\n            S: 'msec',\n            SS: 'msecs',\n            s: 'sec',\n            ss: 'secs',\n            m: 'min',\n            mm: 'mins',\n            h: 'hr',\n            hh: 'hrs',\n            d: 'dy',\n            dd: 'dys',\n            w: 'wk',\n            ww: 'wks',\n            M: 'mo',\n            MM: 'mos',\n            y: 'yr',\n            yy: 'yrs'\n        },\n        durationTimeTemplates: {\n            HMS: 'h:mm:ss',\n            HM: 'h:mm',\n            MS: 'm:ss'\n        },\n        durationLabelTypes: [\n            { type: \"standard\", string: \"__\" },\n            { type: \"short\", string: \"_\" }\n        ],\n        durationPluralKey: durationPluralKey\n    };\n\n    // isArray\n    function isArray(array) {\n        return Object.prototype.toString.call(array) === \"[object Array]\";\n    }\n\n    // isObject\n    function isObject(obj) {\n        return Object.prototype.toString.call(obj) === \"[object Object]\";\n    }\n\n    // findLast\n    function findLast(array, callback) {\n        var index = array.length;\n\n        while (index -= 1) {\n            if (callback(array[index])) { return array[index]; }\n        }\n    }\n\n    // find\n    function find(array, callback) {\n        var index = 0;\n\n        var max = array && array.length || 0;\n\n        var match;\n\n        if (typeof callback !== \"function\") {\n            match = callback;\n            callback = function (item) {\n                return item === match;\n            };\n        }\n\n        while (index < max) {\n            if (callback(array[index])) { return array[index]; }\n            index += 1;\n        }\n    }\n\n    // each\n    function each(array, callback) {\n        var index = 0,\n            max = array.length;\n\n        if (!array || !max) { return; }\n\n        while (index < max) {\n            if (callback(array[index], index) === false) { return; }\n            index += 1;\n        }\n    }\n\n    // map\n    function map(array, callback) {\n        var index = 0,\n            max = array.length,\n            ret = [];\n\n        if (!array || !max) { return ret; }\n\n        while (index < max) {\n            ret[index] = callback(array[index], index);\n            index += 1;\n        }\n\n        return ret;\n    }\n\n    // pluck\n    function pluck(array, prop) {\n        return map(array, function (item) {\n            return item[prop];\n        });\n    }\n\n    // compact\n    function compact(array) {\n        var ret = [];\n\n        each(array, function (item) {\n            if (item) { ret.push(item); }\n        });\n\n        return ret;\n    }\n\n    // unique\n    function unique(array) {\n        var ret = [];\n\n        each(array, function (_a) {\n            if (!find(ret, _a)) { ret.push(_a); }\n        });\n\n        return ret;\n    }\n\n    // intersection\n    function intersection(a, b) {\n        var ret = [];\n\n        each(a, function (_a) {\n            each(b, function (_b) {\n                if (_a === _b) { ret.push(_a); }\n            });\n        });\n\n        return unique(ret);\n    }\n\n    // rest\n    function rest(array, callback) {\n        var ret = [];\n\n        each(array, function (item, index) {\n            if (!callback(item)) {\n                ret = array.slice(index);\n                return false;\n            }\n        });\n\n        return ret;\n    }\n\n    // initial\n    function initial(array, callback) {\n        var reversed = array.slice().reverse();\n\n        return rest(reversed, callback).reverse();\n    }\n\n    // extend\n    function extend(a, b) {\n        for (var key in b) {\n            if (b.hasOwnProperty(key)) { a[key] = b[key]; }\n        }\n\n        return a;\n    }\n\n    // keys\n    function keys(a) {\n        var ret = [];\n\n        for (var key in a) {\n            if (a.hasOwnProperty(key)) { ret.push(key); }\n        }\n\n        return ret;\n    }\n\n    // any\n    function any(array, callback) {\n        var index = 0,\n            max = array.length;\n\n        if (!array || !max) { return false; }\n\n        while (index < max) {\n            if (callback(array[index], index) === true) { return true; }\n            index += 1;\n        }\n\n        return false;\n    }\n\n    // flatten\n    function flatten(array) {\n        var ret = [];\n\n        each(array, function(child) {\n            ret = ret.concat(child);\n        });\n\n        return ret;\n    }\n\n    function toLocaleStringSupportsLocales() {\n        var number = 0;\n        try {\n            number.toLocaleString('i');\n        } catch (e) {\n            return e.name === 'RangeError';\n        }\n        return false;\n    }\n\n    function featureTestToLocaleStringRounding() {\n        return (3.55).toLocaleString(\"en\", {\n            useGrouping: false,\n            minimumIntegerDigits: 1,\n            minimumFractionDigits: 1,\n            maximumFractionDigits: 1\n        }) === \"3.6\";\n    }\n\n    function featureTestToLocaleString() {\n        var passed = true;\n\n        // Test locale.\n        passed = passed && toLocaleStringSupportsLocales();\n        if (!passed) { return false; }\n\n        // Test minimumIntegerDigits.\n        passed = passed && (1).toLocaleString(\"en\", { minimumIntegerDigits: 1 }) === \"1\";\n        passed = passed && (1).toLocaleString(\"en\", { minimumIntegerDigits: 2 }) === \"01\";\n        passed = passed && (1).toLocaleString(\"en\", { minimumIntegerDigits: 3 }) === \"001\";\n        if (!passed) { return false; }\n\n        // Test maximumFractionDigits and minimumFractionDigits.\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumFractionDigits: 0, minimumFractionDigits: 0 }) === \"100\";\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumFractionDigits: 1, minimumFractionDigits: 1 }) === \"100.0\";\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumFractionDigits: 2, minimumFractionDigits: 2 }) === \"99.99\";\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumFractionDigits: 3, minimumFractionDigits: 3 }) === \"99.990\";\n        if (!passed) { return false; }\n\n        // Test maximumSignificantDigits.\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumSignificantDigits: 1 }) === \"100\";\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumSignificantDigits: 2 }) === \"100\";\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumSignificantDigits: 3 }) === \"100\";\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumSignificantDigits: 4 }) === \"99.99\";\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumSignificantDigits: 5 }) === \"99.99\";\n        if (!passed) { return false; }\n\n        // Test grouping.\n        passed = passed && (1000).toLocaleString(\"en\", { useGrouping: true }) === \"1,000\";\n        passed = passed && (1000).toLocaleString(\"en\", { useGrouping: false }) === \"1000\";\n        if (!passed) { return false; }\n\n        return true;\n    }\n\n    // durationsFormat(durations [, template] [, precision] [, settings])\n    function durationsFormat() {\n        var args = [].slice.call(arguments);\n        var settings = {};\n        var durations;\n\n        // Parse arguments.\n        each(args, function (arg, index) {\n            if (!index) {\n                if (!isArray(arg)) {\n                    throw \"Expected array as the first argument to durationsFormat.\";\n                }\n\n                durations = arg;\n            }\n\n            if (typeof arg === \"string\" || typeof arg === \"function\") {\n                settings.template = arg;\n                return;\n            }\n\n            if (typeof arg === \"number\") {\n                settings.precision = arg;\n                return;\n            }\n\n            if (isObject(arg)) {\n                extend(settings, arg);\n            }\n        });\n\n        if (!durations || !durations.length) {\n            return [];\n        }\n\n        settings.returnMomentTypes = true;\n\n        var formattedDurations = map(durations, function (dur) {\n            return dur.format(settings);\n        });\n\n        // Merge token types from all durations.\n        var outputTypes = intersection(types, unique(pluck(flatten(formattedDurations), \"type\")));\n\n        var largest = settings.largest;\n\n        if (largest) {\n            outputTypes = outputTypes.slice(0, largest);\n        }\n\n        settings.returnMomentTypes = false;\n        settings.outputTypes = outputTypes;\n\n        return map(durations, function (dur) {\n            return dur.format(settings);\n        });\n    }\n\n    // durationFormat([template] [, precision] [, settings])\n    function durationFormat() {\n\n        var args = [].slice.call(arguments);\n        var settings = extend({}, this.format.defaults);\n\n        // Keep a shadow copy of this moment for calculating remainders.\n        // Perform all calculations on positive duration value, handle negative\n        // sign at the very end.\n        var asMilliseconds = this.asMilliseconds();\n        var asMonths = this.asMonths();\n\n        // Treat invalid durations as having a value of 0 milliseconds.\n        if (this.isValid() === false) {\n            asMilliseconds = 0;\n            asMonths = 0;\n        }\n\n        var isNegative = asMilliseconds < 0;\n\n        // Two shadow copies are needed because of the way moment.js handles\n        // duration arithmetic for years/months and for weeks/days/hours/minutes/seconds.\n        var remainder = moment.duration(Math.abs(asMilliseconds), \"milliseconds\");\n        var remainderMonths = moment.duration(Math.abs(asMonths), \"months\");\n\n        // Parse arguments.\n        each(args, function (arg) {\n            if (typeof arg === \"string\" || typeof arg === \"function\") {\n                settings.template = arg;\n                return;\n            }\n\n            if (typeof arg === \"number\") {\n                settings.precision = arg;\n                return;\n            }\n\n            if (isObject(arg)) {\n                extend(settings, arg);\n            }\n        });\n\n        var momentTokens = {\n            years: \"y\",\n            months: \"M\",\n            weeks: \"w\",\n            days: \"d\",\n            hours: \"h\",\n            minutes: \"m\",\n            seconds: \"s\",\n            milliseconds: \"S\"\n        };\n\n        var tokenDefs = {\n            escape: /\\[(.+?)\\]/,\n            years: /\\*?[Yy]+/,\n            months: /\\*?M+/,\n            weeks: /\\*?[Ww]+/,\n            days: /\\*?[Dd]+/,\n            hours: /\\*?[Hh]+/,\n            minutes: /\\*?m+/,\n            seconds: /\\*?s+/,\n            milliseconds: /\\*?S+/,\n            general: /.+?/\n        };\n\n        // Types array is available in the template function.\n        settings.types = types;\n\n        var typeMap = function (token) {\n            return find(types, function (type) {\n                return tokenDefs[type].test(token);\n            });\n        };\n\n        var tokenizer = new RegExp(map(types, function (type) {\n            return tokenDefs[type].source;\n        }).join(\"|\"), \"g\");\n\n        // Current duration object is available in the template function.\n        settings.duration = this;\n\n        // Eval template function and cache template string.\n        var template = typeof settings.template === \"function\" ? settings.template.apply(settings) : settings.template;\n\n        // outputTypes and returnMomentTypes are settings to support durationsFormat().\n\n        // outputTypes is an array of moment token types that determines\n        // the tokens returned in formatted output. This option overrides\n        // trim, largest, stopTrim, etc.\n        var outputTypes = settings.outputTypes;\n\n        // returnMomentTypes is a boolean that sets durationFormat to return\n        // the processed momentTypes instead of formatted output.\n        var returnMomentTypes = settings.returnMomentTypes;\n\n        var largest = settings.largest;\n\n        // Setup stopTrim array of token types.\n        var stopTrim = [];\n\n        if (!outputTypes) {\n            if (isArray(settings.stopTrim)) {\n                settings.stopTrim = settings.stopTrim.join(\"\");\n            }\n\n            // Parse stopTrim string to create token types array.\n            if (settings.stopTrim) {\n                each(settings.stopTrim.match(tokenizer), function (token) {\n                    var type = typeMap(token);\n\n                    if (type === \"escape\" || type === \"general\") {\n                        return;\n                    }\n\n                    stopTrim.push(type);\n                });\n            }\n        }\n\n        // Cache moment's locale data.\n        var localeData = moment.localeData();\n\n        if (!localeData) {\n            localeData = {};\n        }\n\n        // Fall back to this plugin's `eng` extension.\n        each(keys(engLocale), function (key) {\n            if (typeof engLocale[key] === \"function\") {\n                if (!localeData[key]) {\n                    localeData[key] = engLocale[key];\n                }\n\n                return;\n            }\n\n            if (!localeData[\"_\" + key]) {\n                localeData[\"_\" + key] = engLocale[key];\n            }\n        });\n\n        // Replace Duration Time Template strings.\n        // For locale `eng`: `_HMS_`, `_HM_`, and `_MS_`.\n        each(keys(localeData._durationTimeTemplates), function (item) {\n            template = template.replace(\"_\" + item + \"_\", localeData._durationTimeTemplates[item]);\n        });\n\n        // Determine user's locale.\n        var userLocale = settings.userLocale || moment.locale();\n\n        var useLeftUnits = settings.useLeftUnits;\n        var usePlural = settings.usePlural;\n        var precision = settings.precision;\n        var forceLength = settings.forceLength;\n        var useGrouping = settings.useGrouping;\n        var trunc = settings.trunc;\n\n        // Use significant digits only when precision is greater than 0.\n        var useSignificantDigits = settings.useSignificantDigits && precision > 0;\n        var significantDigits = useSignificantDigits ? settings.precision : 0;\n        var significantDigitsCache = significantDigits;\n\n        var minValue = settings.minValue;\n        var isMinValue = false;\n\n        var maxValue = settings.maxValue;\n        var isMaxValue = false;\n\n        // formatNumber fallback options.\n        var useToLocaleString = settings.useToLocaleString;\n        var groupingSeparator = settings.groupingSeparator;\n        var decimalSeparator = settings.decimalSeparator;\n        var grouping = settings.grouping;\n\n        useToLocaleString = useToLocaleString && toLocaleStringWorks;\n\n        // Trim options.\n        var trim = settings.trim;\n\n        if (isArray(trim)) {\n            trim = trim.join(\" \");\n        }\n\n        if (trim === null && (largest || maxValue || useSignificantDigits)) {\n            trim = \"all\";\n        }\n\n        if (trim === null || trim === true || trim === \"left\" || trim === \"right\") {\n            trim = \"large\";\n        }\n\n        if (trim === false) {\n            trim = \"\";\n        }\n\n        var trimIncludes = function (item) {\n            return item.test(trim);\n        };\n\n        var rLarge = /large/;\n        var rSmall = /small/;\n        var rBoth = /both/;\n        var rMid = /mid/;\n        var rAll = /^all|[^sm]all/;\n        var rFinal = /final/;\n\n        var trimLarge = largest > 0 || any([rLarge, rBoth, rAll], trimIncludes);\n        var trimSmall = any([rSmall, rBoth, rAll], trimIncludes);\n        var trimMid = any([rMid, rAll], trimIncludes);\n        var trimFinal = any([rFinal, rAll], trimIncludes);\n\n        // Parse format string to create raw tokens array.\n        var rawTokens = map(template.match(tokenizer), function (token, index) {\n            var type = typeMap(token);\n\n            if (token.slice(0, 1) === \"*\") {\n                token = token.slice(1);\n\n                if (type !== \"escape\" && type !== \"general\") {\n                    stopTrim.push(type);\n                }\n            }\n\n            return {\n                index: index,\n                length: token.length,\n                text: \"\",\n\n                // Replace escaped tokens with the non-escaped token text.\n                token: (type === \"escape\" ? token.replace(tokenDefs.escape, \"$1\") : token),\n\n                // Ignore type on non-moment tokens.\n                type: ((type === \"escape\" || type === \"general\") ? null : type)\n            };\n        });\n\n        // Associate text tokens with moment tokens.\n        var currentToken = {\n            index: 0,\n            length: 0,\n            token: \"\",\n            text: \"\",\n            type: null\n        };\n\n        var tokens = [];\n\n        if (useLeftUnits) {\n            rawTokens.reverse();\n        }\n\n        each(rawTokens, function (token) {\n            if (token.type) {\n                if (currentToken.type || currentToken.text) {\n                    tokens.push(currentToken);\n                }\n\n                currentToken = token;\n\n                return;\n            }\n\n            if (useLeftUnits) {\n                currentToken.text = token.token + currentToken.text;\n            } else {\n                currentToken.text += token.token;\n            }\n        });\n\n        if (currentToken.type || currentToken.text) {\n            tokens.push(currentToken);\n        }\n\n        if (useLeftUnits) {\n            tokens.reverse();\n        }\n\n        // Find unique moment token types in the template in order of\n        // descending magnitude.\n        var momentTypes = intersection(types, unique(compact(pluck(tokens, \"type\"))));\n\n        // Exit early if there are no moment token types.\n        if (!momentTypes.length) {\n            return pluck(tokens, \"text\").join(\"\");\n        }\n\n        // Calculate values for each moment type in the template.\n        // For processing the settings, values are associated with moment types.\n        // Values will be assigned to tokens at the last step in order to\n        // assume nothing about frequency or order of tokens in the template.\n        momentTypes = map(momentTypes, function (momentType, index) {\n            // Is this the least-magnitude moment token found?\n            var isSmallest = ((index + 1) === momentTypes.length);\n\n            // Is this the greatest-magnitude moment token found?\n            var isLargest = (!index);\n\n            // Get the raw value in the current units.\n            var rawValue;\n\n            if (momentType === \"years\" || momentType === \"months\") {\n                rawValue = remainderMonths.as(momentType);\n            } else {\n                rawValue = remainder.as(momentType);\n            }\n\n            var wholeValue = Math.floor(rawValue);\n            var decimalValue = rawValue - wholeValue;\n\n            var token = find(tokens, function (token) {\n                return momentType === token.type;\n            });\n\n            if (isLargest && maxValue && rawValue > maxValue) {\n                isMaxValue = true;\n            }\n\n            if (isSmallest && minValue && Math.abs(settings.duration.as(momentType)) < minValue) {\n                isMinValue = true;\n            }\n\n            // Note the length of the largest-magnitude moment token:\n            // if it is greater than one and forceLength is not set,\n            // then default forceLength to `true`.\n            //\n            // Rationale is this: If the template is \"h:mm:ss\" and the\n            // moment value is 5 minutes, the user-friendly output is\n            // \"5:00\", not \"05:00\". We shouldn't pad the `minutes` token\n            // even though it has length of two if the template is \"h:mm:ss\";\n            //\n            // If the minutes output should always include the leading zero\n            // even when the hour is trimmed then set `{ forceLength: true }`\n            // to output \"05:00\". If the template is \"hh:mm:ss\", the user\n            // clearly wanted everything padded so we should output \"05:00\";\n            //\n            // If the user wants the full padded output, they can use\n            // template \"hh:mm:ss\" and set `{ trim: false }` to output\n            // \"00:05:00\".\n            if (isLargest && forceLength === null && token.length > 1) {\n                forceLength = true;\n            }\n\n            // Update remainder.\n            remainder.subtract(wholeValue, momentType);\n            remainderMonths.subtract(wholeValue, momentType);\n\n            return {\n                rawValue: rawValue,\n                wholeValue: wholeValue,\n                // Decimal value is only retained for the least-magnitude\n                // moment type in the format template.\n                decimalValue: isSmallest ? decimalValue : 0,\n                isSmallest: isSmallest,\n                isLargest: isLargest,\n                type: momentType,\n                // Tokens can appear multiple times in a template string,\n                // but all instances must share the same length.\n                tokenLength: token.length\n            };\n        });\n\n        var truncMethod = trunc ? Math.floor : Math.round;\n        var truncate = function (value, places) {\n            var factor = Math.pow(10, places);\n            return truncMethod(value * factor) / factor;\n        };\n\n        var foundFirst = false;\n        var bubbled = false;\n\n        var formatValue = function (momentType, index) {\n            var formatOptions = {\n                useGrouping: useGrouping,\n                groupingSeparator: groupingSeparator,\n                decimalSeparator: decimalSeparator,\n                grouping: grouping,\n                useToLocaleString: useToLocaleString\n            };\n\n            if (useSignificantDigits) {\n                if (significantDigits <= 0) {\n                    momentType.rawValue = 0;\n                    momentType.wholeValue = 0;\n                    momentType.decimalValue = 0;\n                } else {\n                    formatOptions.maximumSignificantDigits = significantDigits;\n                    momentType.significantDigits = significantDigits;\n                }\n            }\n\n            if (isMaxValue && !bubbled) {\n                if (momentType.isLargest) {\n                    momentType.wholeValue = maxValue;\n                    momentType.decimalValue = 0;\n                } else {\n                    momentType.wholeValue = 0;\n                    momentType.decimalValue = 0;\n                }\n            }\n\n            if (isMinValue && !bubbled) {\n                if (momentType.isSmallest) {\n                    momentType.wholeValue = minValue;\n                    momentType.decimalValue = 0;\n                } else {\n                    momentType.wholeValue = 0;\n                    momentType.decimalValue = 0;\n                }\n            }\n\n            if (momentType.isSmallest || momentType.significantDigits && momentType.significantDigits - momentType.wholeValue.toString().length <= 0) {\n                // Apply precision to least significant token value.\n                if (precision < 0) {\n                    momentType.value = truncate(momentType.wholeValue, precision);\n                } else if (precision === 0) {\n                    momentType.value = truncMethod(momentType.wholeValue + momentType.decimalValue);\n                } else { // precision > 0\n                    if (useSignificantDigits) {\n                        if (trunc) {\n                            momentType.value = truncate(momentType.rawValue, significantDigits - momentType.wholeValue.toString().length);\n                        } else {\n                            momentType.value = momentType.rawValue;\n                        }\n\n                        if (momentType.wholeValue) {\n                            significantDigits -= momentType.wholeValue.toString().length;\n                        }\n                    } else {\n                        formatOptions.fractionDigits = precision;\n\n                        if (trunc) {\n                            momentType.value = momentType.wholeValue + truncate(momentType.decimalValue, precision);\n                        } else {\n                            momentType.value = momentType.wholeValue + momentType.decimalValue;\n                        }\n                    }\n                }\n            } else {\n                if (useSignificantDigits && momentType.wholeValue) {\n                    // Outer Math.round required here to handle floating point errors.\n                    momentType.value = Math.round(truncate(momentType.wholeValue, momentType.significantDigits - momentType.wholeValue.toString().length));\n\n                    significantDigits -= momentType.wholeValue.toString().length;\n                } else {\n                    momentType.value = momentType.wholeValue;\n                }\n            }\n\n            if (momentType.tokenLength > 1 && (forceLength || foundFirst)) {\n                formatOptions.minimumIntegerDigits = momentType.tokenLength;\n\n                if (bubbled && formatOptions.maximumSignificantDigits < momentType.tokenLength) {\n                    delete formatOptions.maximumSignificantDigits;\n                }\n            }\n\n            if (!foundFirst && (momentType.value > 0 || trim === \"\" /* trim: false */ || find(stopTrim, momentType.type) || find(outputTypes, momentType.type))) {\n                foundFirst = true;\n            }\n\n            momentType.formattedValue = formatNumber(momentType.value, formatOptions, userLocale);\n\n            formatOptions.useGrouping = false;\n            formatOptions.decimalSeparator = \".\";\n            momentType.formattedValueEn = formatNumber(momentType.value, formatOptions, \"en\");\n\n            if (momentType.tokenLength === 2 && momentType.type === \"milliseconds\") {\n                momentType.formattedValueMS = formatNumber(momentType.value, {\n                    minimumIntegerDigits: 3,\n                    useGrouping: false\n                }, \"en\").slice(0, 2);\n            }\n\n            return momentType;\n        };\n\n        // Calculate formatted values.\n        momentTypes = map(momentTypes, formatValue);\n        momentTypes = compact(momentTypes);\n\n        // Bubble rounded values.\n        if (momentTypes.length > 1) {\n            var findType = function (type) {\n                return find(momentTypes, function (momentType) {\n                    return momentType.type === type;\n                });\n            };\n\n            var bubbleTypes = function (bubble) {\n                var bubbleMomentType = findType(bubble.type);\n\n                if (!bubbleMomentType) {\n                    return;\n                }\n\n                each(bubble.targets, function (target) {\n                    var targetMomentType = findType(target.type);\n\n                    if (!targetMomentType) {\n                        return;\n                    }\n\n                    if (parseInt(bubbleMomentType.formattedValueEn, 10) === target.value) {\n                        bubbleMomentType.rawValue = 0;\n                        bubbleMomentType.wholeValue = 0;\n                        bubbleMomentType.decimalValue = 0;\n                        targetMomentType.rawValue += 1;\n                        targetMomentType.wholeValue += 1;\n                        targetMomentType.decimalValue = 0;\n                        targetMomentType.formattedValueEn = targetMomentType.wholeValue.toString();\n                        bubbled = true;\n                    }\n                });\n            };\n\n            each(bubbles, bubbleTypes);\n        }\n\n        // Recalculate formatted values.\n        if (bubbled) {\n            foundFirst = false;\n            significantDigits = significantDigitsCache;\n            momentTypes = map(momentTypes, formatValue);\n            momentTypes = compact(momentTypes);\n        }\n\n        if (outputTypes && !(isMaxValue && !settings.trim)) {\n            momentTypes = map(momentTypes, function (momentType) {\n                if (find(outputTypes, function (outputType) {\n                    return momentType.type === outputType;\n                })) {\n                    return momentType;\n                }\n\n                return null;\n            });\n\n            momentTypes = compact(momentTypes);\n        } else {\n            // Trim Large.\n            if (trimLarge) {\n                momentTypes = rest(momentTypes, function (momentType) {\n                    // Stop trimming on:\n                    // - the smallest moment type\n                    // - a type marked for stopTrim\n                    // - a type that has a whole value\n                    return !momentType.isSmallest && !momentType.wholeValue && !find(stopTrim, momentType.type);\n                });\n            }\n\n            // Largest.\n            if (largest && momentTypes.length) {\n                momentTypes = momentTypes.slice(0, largest);\n            }\n\n            // Trim Small.\n            if (trimSmall && momentTypes.length > 1) {\n                momentTypes = initial(momentTypes, function (momentType) {\n                    // Stop trimming on:\n                    // - a type marked for stopTrim\n                    // - a type that has a whole value\n                    // - the largest momentType\n                    return !momentType.wholeValue && !find(stopTrim, momentType.type) && !momentType.isLargest;\n                });\n            }\n\n            // Trim Mid.\n            if (trimMid) {\n                momentTypes = map(momentTypes, function (momentType, index) {\n                    if (index > 0 && index < momentTypes.length - 1 && !momentType.wholeValue) {\n                        return null;\n                    }\n\n                    return momentType;\n                });\n\n                momentTypes = compact(momentTypes);\n            }\n\n            // Trim Final.\n            if (trimFinal && momentTypes.length === 1 && !momentTypes[0].wholeValue && !(!trunc && momentTypes[0].isSmallest && momentTypes[0].rawValue < minValue)) {\n                momentTypes = [];\n            }\n        }\n\n        if (returnMomentTypes) {\n            return momentTypes;\n        }\n\n        // Localize and pluralize unit labels.\n        each(tokens, function (token) {\n            var key = momentTokens[token.type];\n\n            var momentType = find(momentTypes, function (momentType) {\n                return momentType.type === token.type;\n            });\n\n            if (!key || !momentType) {\n                return;\n            }\n\n            var values = momentType.formattedValueEn.split(\".\");\n\n            values[0] = parseInt(values[0], 10);\n\n            if (values[1]) {\n                values[1] = parseFloat(\"0.\" + values[1], 10);\n            } else {\n                values[1] = null;\n            }\n\n            var pluralKey = localeData.durationPluralKey(key, values[0], values[1]);\n\n            var labels = durationGetLabels(key, localeData);\n\n            var autoLocalized = false;\n\n            var pluralizedLabels = {};\n\n            // Auto-Localized unit labels.\n            each(localeData._durationLabelTypes, function (labelType) {\n                var label = find(labels, function (label) {\n                    return label.type === labelType.type && label.key === pluralKey;\n                });\n\n                if (label) {\n                    pluralizedLabels[label.type] = label.label;\n\n                    if (stringIncludes(token.text, labelType.string)) {\n                        token.text = token.text.replace(labelType.string, label.label);\n                        autoLocalized = true;\n                    }\n                }\n            });\n\n            // Auto-pluralized unit labels.\n            if (usePlural && !autoLocalized) {\n                labels.sort(durationLabelCompare);\n\n                each(labels, function (label) {\n                    if (pluralizedLabels[label.type] === label.label) {\n                        if (stringIncludes(token.text, label.label)) {\n                            // Stop checking this token if its label is already\n                            // correctly pluralized.\n                            return false;\n                        }\n\n                        // Skip this label if it is correct, but not present in\n                        // the token's text.\n                        return;\n                    }\n\n                    if (stringIncludes(token.text, label.label)) {\n                        // Replece this token's label and stop checking.\n                        token.text = token.text.replace(label.label, pluralizedLabels[label.type]);\n                        return false;\n                    }\n                });\n            }\n        });\n\n        // Build ouptut.\n        tokens = map(tokens, function (token) {\n            if (!token.type) {\n                return token.text;\n            }\n\n            var momentType = find(momentTypes, function (momentType) {\n                return momentType.type === token.type;\n            });\n\n            if (!momentType) {\n                return \"\";\n            }\n\n            var out = \"\";\n\n            if (useLeftUnits) {\n                out += token.text;\n            }\n\n            if (isNegative && isMaxValue || !isNegative && isMinValue) {\n                out += \"< \";\n                isMaxValue = false;\n                isMinValue = false;\n            }\n\n            if (isNegative && isMinValue || !isNegative && isMaxValue) {\n                out += \"> \";\n                isMaxValue = false;\n                isMinValue = false;\n            }\n\n            if (isNegative && (momentType.value > 0 || find(stopTrim, momentType.type) || find(outputTypes, momentType.type))) {\n                out += \"-\";\n                isNegative = false;\n            }\n\n            if (token.type === \"milliseconds\" && momentType.formattedValueMS) {\n                out += momentType.formattedValueMS;\n            } else {\n                out += momentType.formattedValue;\n            }\n\n            if (!useLeftUnits) {\n                out += token.text;\n            }\n\n            return out;\n        });\n\n        // Trim leading and trailing comma, space, colon, and dot.\n        return tokens.join(\"\").replace(/(,| |:|\\.)*$/, \"\").replace(/^(,| |:|\\.)*/, \"\");\n    }\n\n    // defaultFormatTemplate\n    function defaultFormatTemplate() {\n        var dur = this.duration;\n\n        var findType = function findType(type) {\n            return dur._data[type];\n        };\n\n        var firstType = find(this.types, findType);\n\n        var lastType = findLast(this.types, findType);\n\n        // Default template strings for each duration dimension type.\n        switch (firstType) {\n            case \"milliseconds\":\n                return \"S __\";\n            case \"seconds\": // Fallthrough.\n            case \"minutes\":\n                return \"*_MS_\";\n            case \"hours\":\n                return \"_HMS_\";\n            case \"days\": // Possible Fallthrough.\n                if (firstType === lastType) {\n                    return \"d __\";\n                }\n            case \"weeks\":\n                if (firstType === lastType) {\n                    return \"w __\";\n                }\n\n                if (this.trim === null) {\n                    this.trim = \"both\";\n                }\n\n                return \"w __, d __, h __\";\n            case \"months\": // Possible Fallthrough.\n                if (firstType === lastType) {\n                    return \"M __\";\n                }\n            case \"years\":\n                if (firstType === lastType) {\n                    return \"y __\";\n                }\n\n                if (this.trim === null) {\n                    this.trim = \"both\";\n                }\n\n                return \"y __, M __, d __\";\n            default:\n                if (this.trim === null) {\n                    this.trim = \"both\";\n                }\n\n                return \"y __, d __, h __, m __, s __\";\n        }\n    }\n\n    // init\n    function init(context) {\n        if (!context) {\n            throw \"Moment Duration Format init cannot find moment instance.\";\n        }\n\n        context.duration.format = durationsFormat;\n        context.duration.fn.format = durationFormat;\n\n        context.duration.fn.format.defaults = {\n            // Many options are defaulted to `null` to distinguish between\n            // 'not set' and 'set to `false`'\n\n            // trim\n            // Can be a string, a delimited list of strings, an array of strings,\n            // or a boolean.\n            // \"large\" - will trim largest-magnitude zero-value tokens until\n            // finding a token with a value, a token identified as 'stopTrim', or\n            // the final token of the format string.\n            // \"small\" - will trim smallest-magnitude zero-value tokens until\n            // finding a token with a value, a token identified as 'stopTrim', or\n            // the final token of the format string.\n            // \"both\" - will execute \"large\" trim then \"small\" trim.\n            // \"mid\" - will trim any zero-value tokens that are not the first or\n            // last tokens. Usually used in conjunction with \"large\" or \"both\".\n            // e.g. \"large mid\" or \"both mid\".\n            // \"final\" - will trim the final token if it is zero-value. Use this\n            // option with \"large\" or \"both\" to output an empty string when\n            // formatting a zero-value duration. e.g. \"large final\" or \"both final\".\n            // \"all\" - Will trim all zero-value tokens. Shorthand for \"both mid final\".\n            // \"left\" - maps to \"large\" to support plugin's version 1 API.\n            // \"right\" - maps to \"large\" to support plugin's version 1 API.\n            // `false` - template tokens are not trimmed.\n            // `true` - treated as \"large\".\n            // `null` - treated as \"large\".\n            trim: null,\n\n            // stopTrim\n            // A moment token string, a delimited set of moment token strings,\n            // or an array of moment token strings. Trimming will stop when a token\n            // listed in this option is reached. A \"*\" character in the format\n            // template string will also mark a moment token as stopTrim.\n            // e.g. \"d [days] *h:mm:ss\" will always stop trimming at the 'hours' token.\n            stopTrim: null,\n\n            // largest\n            // Set to a positive integer to output only the \"n\" largest-magnitude\n            // moment tokens that have a value. All lesser-magnitude moment tokens\n            // will be ignored. This option takes effect even if `trim` is set\n            // to `false`.\n            largest: null,\n\n            // maxValue\n            // Use `maxValue` to render generalized output for large duration values,\n            // e.g. `\"> 60 days\"`. `maxValue` must be a positive integer and is\n            /// applied to the greatest-magnitude moment token in the format template.\n            maxValue: null,\n\n            // minValue\n            // Use `minValue` to render generalized output for small duration values,\n            // e.g. `\"< 5 minutes\"`. `minValue` must be a positive integer and is\n            // applied to the least-magnitude moment token in the format template.\n            minValue: null,\n\n            // precision\n            // If a positive integer, number of decimal fraction digits to render.\n            // If a negative integer, number of integer place digits to truncate to 0.\n            // If `useSignificantDigits` is set to `true` and `precision` is a positive\n            // integer, sets the maximum number of significant digits used in the\n            // formatted output.\n            precision: 0,\n\n            // trunc\n            // Default behavior rounds final token value. Set to `true` to\n            // truncate final token value, which was the default behavior in\n            // version 1 of this plugin.\n            trunc: false,\n\n            // forceLength\n            // Force first moment token with a value to render at full length\n            // even when template is trimmed and first moment token has length of 1.\n            forceLength: null,\n\n            // userLocale\n            // Formatted numerical output is rendered using `toLocaleString`\n            // and the locale of the user's environment. Set this option to render\n            // numerical output using a different locale. Unit names are rendered\n            // and detected using the locale set in moment.js, which can be different\n            // from the locale of user's environment.\n            userLocale: null,\n\n            // usePlural\n            // Will automatically singularize or pluralize unit names when they\n            // appear in the text associated with each moment token. Standard and\n            // short unit labels are singularized and pluralized, based on locale.\n            // e.g. in english, \"1 second\" or \"1 sec\" would be rendered instead\n            // of \"1 seconds\" or \"1 secs\". The default pluralization function\n            // renders a plural label for a value with decimal precision.\n            // e.g. \"1.0 seconds\" is never rendered as \"1.0 second\".\n            // Label types and pluralization function are configurable in the\n            // localeData extensions.\n            usePlural: true,\n\n            // useLeftUnits\n            // The text to the right of each moment token in a format string\n            // is treated as that token's units for the purposes of trimming,\n            // singularizing, and auto-localizing.\n            // e.g. \"h [hours], m [minutes], s [seconds]\".\n            // To properly singularize or localize a format string such as\n            // \"[hours] h, [minutes] m, [seconds] s\", where the units appear\n            // to the left of each moment token, set useLeftUnits to `true`.\n            // This plugin is not tested in the context of rtl text.\n            useLeftUnits: false,\n\n            // useGrouping\n            // Enables locale-based digit grouping in the formatted output. See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\n            useGrouping: true,\n\n            // useSignificantDigits\n            // Treat the `precision` option as the maximum significant digits\n            // to be rendered. Precision must be a positive integer. Significant\n            // digits extend across unit types,\n            // e.g. \"6 hours 37.5 minutes\" represents 4 significant digits.\n            // Enabling this option causes token length to be ignored. See  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\n            useSignificantDigits: false,\n\n            // template\n            // The template string used to format the duration. May be a function\n            // or a string. Template functions are executed with the `this` binding\n            // of the settings object so that template strings may be dynamically\n            // generated based on the duration object (accessible via `this.duration`)\n            // or any of the other settings. Leading and trailing space, comma,\n            // period, and colon characters are trimmed from the resulting string.\n            template: defaultFormatTemplate,\n\n            // useToLocaleString\n            // Set this option to `false` to ignore the `toLocaleString` feature\n            // test and force the use of the `formatNumber` fallback function\n            // included in this plugin.\n            useToLocaleString: true,\n\n            // formatNumber fallback options.\n            // When `toLocaleString` is detected and passes the feature test, the\n            // following options will have no effect: `toLocaleString` will be used\n            // for formatting and the grouping separator, decimal separator, and\n            // integer digit grouping will be determined by the user locale.\n\n            // groupingSeparator\n            // The integer digit grouping separator used when using the fallback\n            // formatNumber function.\n            groupingSeparator: \",\",\n\n            // decimalSeparator\n            // The decimal separator used when using the fallback formatNumber\n            // function.\n            decimalSeparator: \".\",\n\n            // grouping\n            // The integer digit grouping used when using the fallback formatNumber\n            // function. Must be an array. The default value of `[3]` gives the\n            // standard 3-digit thousand/million/billion digit groupings for the\n            // \"en\" locale. Setting this option to `[3, 2]` would generate the\n            // thousand/lakh/crore digit groupings used in the \"en-IN\" locale.\n            grouping: [3]\n        };\n\n        context.updateLocale('en', engLocale);\n    }\n\n    // Run feature tests for `Number#toLocaleString`.\n    toLocaleStringWorks = featureTestToLocaleString();\n    toLocaleStringRoundingWorks = toLocaleStringWorks && featureTestToLocaleStringRounding();\n\n    // Initialize duration format on the global moment instance.\n    init(moment);\n\n    // Return the init function so that duration format can be\n    // initialized on other moment instances.\n    return init;\n});\n","module.exports = __WEBPACK_EXTERNAL_MODULE__781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__959__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"public/plugins/grafana-clock-panel/\";","\nimport amdMetaModule from 'amd-module';\n\n__webpack_public_path__ =\n  amdMetaModule && amdMetaModule.uri\n    ? amdMetaModule.uri.slice(0, amdMetaModule.uri.lastIndexOf('/') + 1)\n    : 'public/plugins/grafana-clock-panel/';\n","export interface ClockOptions {\n  mode: ClockMode;\n  refresh: ClockRefresh;\n  clockType: ClockType;\n  timezone?: string;\n  bgColor?: string;\n  fontMono?: boolean;\n  countdownSettings: CountdownSettings;\n  countupSettings: CountupSettings;\n  descriptionSettings: DescriptionSettings;\n  dateSettings: DateSettings;\n  timeSettings: TimeSettings;\n  timezoneSettings: TimezoneSettings;\n}\n\nexport enum ClockSource {\n  input = 'input',\n  query = 'query',\n}\n\nexport enum DescriptionSource {\n  none = 'none',\n  input = 'input',\n  query = 'query',\n}\n\nexport const QueryCalculation = {\n  lastNotNull: 'lastNotNull',\n  last: 'last',\n  firstNotNull: 'firstNotNull',\n  first: 'first',\n  min: 'min',\n  max: 'max',\n};\n\nexport const CountdownQueryCalculation = {\n  ...QueryCalculation,\n  minFuture: 'minFuture',\n} as const;\nexport type CountdownQueryCalculation = (typeof CountdownQueryCalculation)[keyof typeof CountdownQueryCalculation]; // eslint-disable-line no-redeclare\n\nexport const CountupQueryCalculation = {\n  ...QueryCalculation,\n  maxPast: 'maxPast',\n} as const;\nexport type CountupQueryCalculation = (typeof CountupQueryCalculation)[keyof typeof CountupQueryCalculation]; // eslint-disable-line no-redeclare\n\nexport enum ClockMode {\n  time = 'time',\n  countdown = 'countdown',\n  countup = 'countup',\n}\n\nexport enum ClockRefresh {\n  sec = 'sec',\n  dashboard = 'dashboard',\n}\n\nexport enum ClockType {\n  H24 = '24 hour',\n  H12 = '12 hour',\n  Custom = 'custom',\n}\n\nexport enum ZoneFormat {\n  name = 'name',\n  nameOffset = 'nameOffset',\n  offsetAbbv = 'offsetAbbv',\n  offset = 'offset',\n  abbv = 'abbv',\n}\n\nexport enum FontWeight {\n  normal = 'normal',\n  bold = 'bold',\n}\n\ninterface CountdownSettings {\n  source: ClockSource;\n  endCountdownTime: any;\n  queryCalculation: CountdownQueryCalculation;\n  queryField: string;\n  endText: string;\n  noValueText: string;\n  invalidValueText: string;\n  customFormat?: string;\n}\n\ninterface CountupSettings {\n  source: ClockSource;\n  beginCountupTime: any;\n  queryCalculation: CountupQueryCalculation;\n  queryField: string;\n  beginText: string;\n  noValueText: string;\n  invalidValueText: string;\n  customFormat?: string;\n}\n\ninterface DescriptionSettings {\n  source: DescriptionSource;\n  descriptionText: string;\n  queryField: string;\n  noValueText: string;\n  fontSize: string;\n  fontWeight: FontWeight;\n}\n\ninterface DateSettings {\n  showDate: boolean;\n  dateFormat: string;\n  locale: string;\n  fontSize: string;\n  fontWeight: FontWeight;\n}\n\nexport interface TimeSettings {\n  customFormat?: string;\n  fontSize: string;\n  fontWeight: FontWeight;\n}\n\ninterface TimezoneSettings {\n  showTimezone: boolean;\n  zoneFormat: ZoneFormat;\n  fontSize: string;\n  fontWeight: FontWeight;\n}\n","import { css } from '@emotion/css';\nimport { Moment } from 'moment-timezone';\nimport React, { useMemo } from 'react';\nimport { ClockOptions } from 'types';\n\nexport function RenderDate({ options, now }: { options: ClockOptions; now: Moment }) {\n  const { dateSettings } = options;\n\n  const className = useMemo(() => {\n    return css`\n      font-size: ${dateSettings.fontSize};\n      font-weight: ${dateSettings.fontWeight};\n      font-family: ${options.fontMono ? 'monospace' : ''};\n      margin: 0;\n    `;\n  }, [dateSettings.fontSize, dateSettings.fontWeight, options.fontMono]);\n\n  const display = now.locale(dateSettings.locale || '').format(dateSettings.dateFormat);\n\n  return (\n    <span>\n      <h3 className={className}>{display}</h3>\n    </span>\n  );\n}\n","import { css } from '@emotion/css';\nimport moment, { Moment } from 'moment-timezone';\nimport React, { useMemo } from 'react';\nimport { ClockMode, ClockOptions, ClockType, TimeSettings } from 'types';\n\nfunction getCountdownText({\n  countdownSettings,\n  targetTime,\n  now,\n}: {\n  countdownSettings: ClockOptions['countdownSettings'];\n  targetTime: Moment;\n  now: Moment;\n}): string {\n  let timeDiff = moment.duration(targetTime.diff(now));\n  if (timeDiff.asSeconds() <= 0) {\n    return countdownSettings.endText;\n  }\n\n  if (countdownSettings.customFormat === 'auto') {\n    return (timeDiff as any).format();\n  }\n\n  if (countdownSettings.customFormat) {\n    return (timeDiff as any).format(countdownSettings.customFormat);\n  }\n\n  let formattedTimeLeft = '';\n  let previous = '';\n\n  if (timeDiff.years() > 0) {\n    formattedTimeLeft = timeDiff.years() === 1 ? '1 year, ' : timeDiff.years() + ' years, ';\n    previous = 'years';\n  }\n  if (timeDiff.months() > 0 || previous === 'years') {\n    formattedTimeLeft += timeDiff.months() === 1 ? '1 month, ' : timeDiff.months() + ' months, ';\n    previous = 'months';\n  }\n  if (timeDiff.days() > 0 || previous === 'months') {\n    formattedTimeLeft += timeDiff.days() === 1 ? '1 day, ' : timeDiff.days() + ' days, ';\n    previous = 'days';\n  }\n  if (timeDiff.hours() > 0 || previous === 'days') {\n    formattedTimeLeft += timeDiff.hours() === 1 ? '1 hour, ' : timeDiff.hours() + ' hours, ';\n    previous = 'hours';\n  }\n\n  if (timeDiff.minutes() > 0 || previous === 'hours') {\n    formattedTimeLeft += timeDiff.minutes() === 1 ? '1 minute, ' : timeDiff.minutes() + ' minutes, ';\n  }\n\n  formattedTimeLeft += timeDiff.seconds() === 1 ? '1 second ' : timeDiff.seconds() + ' seconds';\n  return formattedTimeLeft;\n}\n\nfunction getCountupText({\n  countupSettings,\n  targetTime,\n  now,\n}: {\n  countupSettings: ClockOptions['countupSettings'];\n  targetTime: Moment;\n  now: Moment;\n}): string {\n  let timeDiff = moment.duration(now.diff(targetTime));\n  if (timeDiff.asSeconds() <= 0) {\n    return countupSettings.beginText;\n  }\n\n  if (countupSettings.customFormat === 'auto') {\n    return (timeDiff as any).format();\n  }\n\n  if (countupSettings.customFormat) {\n    return (timeDiff as any).format(countupSettings.customFormat);\n  }\n\n  let formattedTimePassed = '';\n  let previous = '';\n\n  if (timeDiff.years() > 0) {\n    formattedTimePassed = timeDiff.years() === 1 ? '1 year, ' : timeDiff.years() + ' years, ';\n    previous = 'years';\n  }\n  if (timeDiff.months() > 0 || previous === 'years') {\n    formattedTimePassed += timeDiff.months() === 1 ? '1 month, ' : timeDiff.months() + ' months, ';\n    previous = 'months';\n  }\n  if (timeDiff.days() > 0 || previous === 'months') {\n    formattedTimePassed += timeDiff.days() === 1 ? '1 day, ' : timeDiff.days() + ' days, ';\n    previous = 'days';\n  }\n  if (timeDiff.hours() > 0 || previous === 'days') {\n    formattedTimePassed += timeDiff.hours() === 1 ? '1 hour, ' : timeDiff.hours() + ' hours, ';\n    previous = 'hours';\n  }\n\n  if (timeDiff.minutes() > 0 || previous === 'hours') {\n    formattedTimePassed += timeDiff.minutes() === 1 ? '1 minute, ' : timeDiff.minutes() + ' minutes, ';\n  }\n\n  formattedTimePassed += timeDiff.seconds() === 1 ? '1 second ' : timeDiff.seconds() + ' seconds';\n  return formattedTimePassed;\n}\n\nfunction getTimeFormat(clockType: ClockType, timeSettings: TimeSettings): string {\n  if (clockType === ClockType.Custom && timeSettings.customFormat) {\n    return timeSettings.customFormat;\n  }\n\n  if (clockType === ClockType.H12) {\n    return 'h:mm:ss A';\n  }\n\n  return 'HH:mm:ss';\n}\n\nexport function RenderTime({\n  now,\n  options,\n  targetTime,\n  err,\n}: {\n  now: moment.Moment;\n  options: ClockOptions;\n  targetTime: moment.Moment;\n  err: string | null;\n}) {\n  const { clockType, timeSettings, mode } = options;\n  const className = useMemo(() => {\n    return css`\n      font-size: ${timeSettings.fontSize};\n      font-family: ${options.fontMono ? 'monospace' : ''};\n      font-weight: ${timeSettings.fontWeight};\n      margin: 0;\n    `;\n  }, [options.fontMono, timeSettings.fontSize, timeSettings.fontWeight]);\n\n  let display = '';\n  if (err !== null) {\n    return <h2 className={className}>{err}</h2>;\n  }\n\n  switch (mode) {\n    case ClockMode.countdown:\n      display = getCountdownText({\n        countdownSettings: options.countdownSettings,\n        targetTime: targetTime,\n        now: now,\n      });\n      break;\n    case ClockMode.countup:\n      display = getCountupText({\n        countupSettings: options.countupSettings,\n        targetTime: targetTime,\n        now: now,\n      });\n      break;\n    default:\n      display = targetTime.format(getTimeFormat(clockType, timeSettings));\n      break;\n  }\n\n  return <h2 className={className}>{display}</h2>;\n}\n","import { getTemplateSrv } from '@grafana/runtime';\nimport moment, { Moment } from 'moment-timezone';\n\nexport function getTimeZoneNames(): string[] {\n  return (moment as any).tz.names();\n}\n\nexport function getMoment(tz?: string): Moment {\n  if (!tz) {\n    tz = (moment as any).tz.guess();\n  } else {\n    tz = getTemplateSrv().replace(tz);\n  }\n  return (moment() as any).tz(tz);\n}\n","import { css } from '@emotion/css';\nimport { Moment } from 'moment-timezone';\nimport React, { useMemo } from 'react';\nimport { ClockOptions, ZoneFormat } from 'types';\nimport { getMoment } from 'utils';\n\nexport function RenderZone({ options, now, timezone }: { options: ClockOptions; now: Moment; timezone: string }) {\n  const { timezoneSettings } = options;\n  const { zoneFormat } = timezoneSettings;\n\n  const className = useMemo(() => {\n    return css`\n      font-size: ${timezoneSettings.fontSize};\n      font-weight: ${timezoneSettings.fontWeight};\n      font-family: ${options.fontMono ? 'monospace' : ''};\n      line-height: 1.4;\n      margin: 0;\n    `;\n  }, [options.fontMono, timezoneSettings.fontSize, timezoneSettings.fontWeight]);\n\n  let zone = timezone;\n\n  switch (zoneFormat) {\n    case ZoneFormat.offsetAbbv:\n      zone = now.format('Z z');\n      break;\n    case ZoneFormat.offset:\n      zone = now.format('Z');\n      break;\n    case ZoneFormat.abbv:\n      zone = now.format('z');\n      break;\n    default:\n      try {\n        zone = (getMoment(zone) as any)._z.name;\n      } catch (e) {\n        console.error('Error getting timezone', e);\n      }\n  }\n\n  return (\n    <h4 className={className} data-testid=\"time-zone\">\n      {zone}\n      {zoneFormat === ZoneFormat.nameOffset && (\n        <>\n          <br />({now.format('Z z')})\n        </>\n      )}\n    </h4>\n  );\n}\n","import { css } from '@emotion/css';\nimport React, { useMemo } from 'react';\nimport { ClockOptions } from 'types';\n\nexport function RenderDescription({ options, descriptionText }: { options: ClockOptions; descriptionText: string }) {\n  const { descriptionSettings } = options;\n\n  const className = useMemo(() => {\n    return css`\n      font-size: ${descriptionSettings.fontSize};\n      font-weight: ${descriptionSettings.fontWeight};\n      font-family: ${options.fontMono ? 'monospace' : ''};\n      margin: 0;\n    `;\n  }, [descriptionSettings.fontSize, descriptionSettings.fontWeight, options.fontMono]);\n\n  return (\n    <span>\n      <h3 className={className}>{descriptionText}</h3>\n    </span>\n  );\n}\n","import React from 'react';\nimport { ColorPicker, Input, Icon, stylesFactory } from '@grafana/ui';\nimport { css } from '@emotion/css';\nimport { config } from '@grafana/runtime';\nimport { GrafanaTheme } from '@grafana/data';\n\nexport function ColorEditor(props: any) {\n  const styles = getStyles(config.theme);\n  let prefix: React.ReactNode = null;\n  let suffix: React.ReactNode = null;\n  if (props.value) {\n    suffix = <Icon className={styles.trashIcon} name=\"trash-alt\" onClick={() => props.onChange(undefined)} />;\n  }\n\n  prefix = (\n    <div className={styles.inputPrefix}>\n      <div className={styles.colorPicker}>\n        <ColorPicker\n          color={props.value || config.theme.colors.panelBg}\n          onChange={props.onChange}\n          enableNamedColors={true}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <Input type=\"text\" value={props.value || 'Pick Color'} prefix={prefix} suffix={suffix} readOnly={true} />\n    </div>\n  );\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    colorPicker: css`\n      padding: 0 ${theme.spacing.sm};\n    `,\n    inputPrefix: css`\n      display: flex;\n      align-items: center;\n    `,\n    trashIcon: css`\n      color: ${theme.colors.textWeak};\n      cursor: pointer;\n      &:hover {\n        color: ${theme.colors.text};\n      }\n    `,\n  };\n});\n","import { PanelModel } from '@grafana/data';\nimport { ClockOptions, ClockRefresh } from './types';\nimport { config } from '@grafana/runtime';\n\nexport const clockMigrationHandler = (panel: PanelModel<ClockOptions>): Partial<ClockOptions> => {\n  const options: any = panel.options || {};\n  if (options.refreshSettings?.syncWithDashboard) {\n    options.refresh = ClockRefresh.dashboard;\n  } else if ((panel as any).refreshSettings?.syncWithDashboard) {\n    options.refresh = ClockRefresh.dashboard;\n  }\n\n  if (detectInputOnlyPluginConfig(panel)) {\n    migrateInputOnlyPluginConfig(panel);\n  }\n  // configuration options moved as the panel migrated, clean up if needed\n  cleanupConfig(panel);\n\n  return options;\n};\n\n// detect clock panel that does not use a query\nconst detectInputOnlyPluginConfig = (panel: PanelModel<ClockOptions>) => {\n  let isInputOnly = false;\n\n  const options: any = panel.options || {};\n  if (options.countdownSettings?.source) {\n    if (options.countdownSettings?.source === 'input') {\n      isInputOnly = true;\n    } else {\n      return false;\n    }\n  } else {\n    // no source indicates and old config (pre 2.1.4)\n    isInputOnly = true;\n  }\n  // an input source does not require a datasource\n  if (options.countdownSettings?.source) {\n    if (options.countdownSettings?.source === 'input') {\n      isInputOnly = true;\n    } else {\n      return false;\n    }\n  } else {\n    // no source indicates and old config (pre 2.1.4)\n    isInputOnly = true;\n  }\n\n  if (options.countupSettings?.source) {\n    if (options.countupSettings?.source === 'input') {\n      isInputOnly = true;\n    } else {\n      return false;\n    }\n  } else {\n    // no source indicates and old config (pre 2.1.4)\n    isInputOnly = true;\n  }\n\n  if (options.descriptionSettings?.source) {\n    if (options.descriptionSettings?.source === 'none') {\n      isInputOnly = true;\n    }\n    if (options.descriptionSettings?.source === 'input') {\n      isInputOnly = true;\n    }\n    if (options.descriptionSettings?.source === 'query') {\n      return false;\n    }\n  } else {\n    // no source indicates and old config (pre 2.1.4)\n    isInputOnly = true;\n  }\n\n  return isInputOnly;\n};\n\nconst migrateInputOnlyPluginConfig = (panel: PanelModel<ClockOptions>) => {\n  // remove the datasource\n  delete panel.datasource;\n  // remove the targets\n  panel.targets = [];\n\n  // find the grafana datasource and set it if available\n  const datasources = config.datasources || [];\n  let grafanaDs: (typeof datasources)[number] | undefined = undefined;\n\n  for (let datasourceKey of Object.keys(datasources)) {\n    const ds = datasources[datasourceKey];\n    if (ds.uid === 'grafana' || (ds.name === '-- Grafana --' && ds.type === 'datasource')) {\n      grafanaDs = ds;\n      break;\n    }\n  }\n\n  // set a default random walk\n  if (grafanaDs !== undefined) {\n    panel.targets = [\n      {\n        refId: 'A',\n        datasource: {\n          type: grafanaDs.type,\n          uid: grafanaDs.uid,\n        },\n        queryType: 'randomWalk',\n      },\n    ];\n    panel.datasource = {\n      type: grafanaDs.type,\n      uid: grafanaDs.uid,\n    };\n  }\n};\n\nconst cleanupConfig = (panel: PanelModel<ClockOptions>) => {\n  // @ts-ignore\n  if (panel.clockType) {\n    // @ts-ignore\n    delete panel.clockType;\n  }\n  // @ts-ignore\n  if (panel.countdownSettings) {\n    // @ts-ignore\n    delete panel.countdownSettings;\n  }\n  // @ts-ignore\n  if (panel.datasource) {\n    // @ts-ignore\n    delete panel.datasource;\n  }\n  // @ts-ignore\n  if (panel.dateSettings) {\n    // @ts-ignore\n    delete panel.dateSettings;\n  }\n  // @ts-ignore\n  if (panel.mode) {\n    // @ts-ignore\n    delete panel.mode;\n  }\n  // @ts-ignore\n  if (panel.refreshSettings) {\n    // @ts-ignore\n    delete panel.refreshSettings;\n  }\n  // @ts-ignore\n  if (panel.timeSettings) {\n    // @ts-ignore\n    delete panel.timeSettings;\n  }\n  // @ts-ignore\n  if (panel.timezone) {\n    // @ts-ignore\n    delete panel.timezone;\n  }\n  // @ts-ignore\n  if (panel.timezoneSettings) {\n    // @ts-ignore\n    delete panel.timezoneSettings;\n  }\n};\n","import { PanelPlugin } from '@grafana/data';\n\nimport { ClockPanel } from './ClockPanel';\nimport { ClockOptions } from './types';\nimport { optionsBuilder } from './options';\nimport { clockMigrationHandler } from './migrations';\n\nexport const plugin = new PanelPlugin<ClockOptions>(ClockPanel)\n  .setNoPadding()\n  .setMigrationHandler(clockMigrationHandler)\n  .setPanelOptions(optionsBuilder);\n","import { css } from '@emotion/css';\nimport { PanelProps } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ClockOptions, ClockRefresh, DescriptionSource } from './types';\n\n// eslint-disable-next-line\nimport { RenderDate } from 'components/RenderDate';\nimport { RenderTime } from 'components/RenderTime';\nimport { RenderZone } from 'components/RenderZone';\nimport { Moment } from 'moment-timezone';\nimport { getMoment } from 'utils';\nimport './external/moment-duration-format';\nimport { CalculateClockOptions } from 'components/CalculateClockOptions';\nimport { RenderDescription } from 'components/RenderDescription';\n\ninterface Props extends PanelProps<ClockOptions> {}\n\nexport function ClockPanel(props: Props) {\n  const { options, width, height, data } = props;\n  const theme = useTheme2();\n  const { timezone: optionsTimezone, dateSettings, timezoneSettings } = options;\n  // notice the uppercase Z.\n  const { timeZone: dashboardTimezone } = props;\n  const timezoneToUse = optionsTimezone === 'dashboard' ? dashboardTimezone : (optionsTimezone ?? '');\n  const [now, setNow] = useState<Moment>(getMoment(timezoneToUse));\n\n  const className = useMemo(() => {\n    return css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-flow: column wrap;\n      font-family: ${options.fontMono ? 'monospace' : ''};\n      text-align: center;\n      background-color: ${!options.bgColor\n        ? theme.colors.background.primary\n        : theme.visualization.getColorByName(options.bgColor)};\n    `;\n  }, [options.bgColor, options.fontMono, theme]);\n\n  // Clock refresh only on dashboard refresh\n  useEffect(() => {\n    if (props.options.refresh === ClockRefresh.dashboard) {\n      setNow(getMoment(timezoneToUse));\n    }\n  }, [props, timezoneToUse]);\n\n  // Clock refresh every second\n  useEffect(() => {\n    if (props.options.refresh === ClockRefresh.sec) {\n      const timer = setInterval(() => setNow(getMoment(timezoneToUse)), 1000);\n      return () => clearInterval(timer);\n    }\n    return;\n  }, [props.options.refresh, timezoneToUse]);\n\n  //refresh the time\n  let [targetTime, descriptionText, err]: [Moment, string, string | null] = useMemo(() => {\n    return CalculateClockOptions({\n      options: props.options,\n      timezone: timezoneToUse,\n      data,\n      replaceVariables: props.replaceVariables,\n      now,\n    });\n  }, [props.options, timezoneToUse, data, props.replaceVariables, now]);\n\n  return (\n    <div\n      className={className}\n      style={{\n        width,\n        height,\n      }}\n    >\n      {dateSettings.showDate ? <RenderDate now={now} options={props.options} /> : null}\n      <RenderTime options={props.options} targetTime={targetTime} err={err} now={now} />\n      {timezoneSettings.showTimezone ? <RenderZone now={now} options={props.options} timezone={timezoneToUse} /> : null}\n      {props.options.descriptionSettings.source !== DescriptionSource.none ? (\n        <RenderDescription options={props.options} descriptionText={descriptionText} />\n      ) : null}\n    </div>\n  );\n}\n","import { DataFrame, Field, PanelData, PanelProps } from '@grafana/data';\nimport moment, { Moment, MomentInput } from 'moment-timezone';\nimport {\n  ClockMode,\n  ClockOptions,\n  ClockSource,\n  CountdownQueryCalculation,\n  CountupQueryCalculation,\n  DescriptionSource,\n  QueryCalculation,\n} from 'types';\nimport { getMoment } from 'utils';\n\ntype QueryRow = {\n  time: Moment;\n  description: string;\n};\n\nexport function CalculateClockOptions({\n  options,\n  timezone,\n  data,\n  replaceVariables,\n  now,\n}: {\n  options: ClockOptions;\n  timezone: ClockOptions['timezone'];\n  data: PanelData;\n  replaceVariables: PanelProps['replaceVariables'];\n  now: Moment;\n}): [Moment, string, string | null] {\n  let descriptionNoValueText = options.descriptionSettings.noValueText ?? '';\n  let descriptionText =\n    options.descriptionSettings.source === DescriptionSource.query\n      ? descriptionNoValueText\n      : options.descriptionSettings.descriptionText;\n  if (options.mode !== ClockMode.countdown && options.mode !== ClockMode.countup) {\n    return [now, descriptionText, null];\n  }\n\n  let userInputTime: string | undefined = '';\n  let clockSettings: ClockOptions['countdownSettings'] | ClockOptions['countupSettings'];\n  switch (options.mode) {\n    case ClockMode.countdown:\n      userInputTime = options.countdownSettings.endCountdownTime || '';\n      clockSettings = options.countdownSettings;\n      break;\n    case ClockMode.countup:\n      userInputTime = options.countupSettings.beginCountupTime || '';\n      clockSettings = options.countupSettings;\n      break;\n  }\n\n  let clockNoValueText = clockSettings.noValueText ?? '';\n  let clockInvalidValueText = clockSettings.invalidValueText ?? '';\n  let targetTime: Moment | undefined | null = undefined;\n  switch (clockSettings.source) {\n    case ClockSource.input:\n      if (!userInputTime) {\n        return [now, descriptionText, clockNoValueText];\n      }\n      targetTime = moment(replaceVariables(userInputTime)).utcOffset(getMoment(timezone).format('Z'), true);\n      break;\n    case ClockSource.query:\n      const isDataReady = data.state === 'Done' && data.series.length !== 0;\n      const isQueryFieldSelected = clockSettings.queryField && clockSettings.queryField.length !== 0;\n      if (!isDataReady || !isQueryFieldSelected) {\n        return [now, descriptionText, clockNoValueText];\n      }\n\n      let timeField: Field | undefined = data.series.reduce((foundField: Field | undefined, series: DataFrame) => {\n        if (foundField) {\n          return foundField;\n        }\n        return series.fields.find((field: Field) => field.name === clockSettings.queryField) ?? undefined;\n      }, undefined);\n      let descriptionField: Field | undefined = data.series.reduce(\n        (foundField: Field | undefined, series: DataFrame) => {\n          if (foundField) {\n            return foundField;\n          }\n          return (\n            series.fields.find((field: Field) => field.name === options.descriptionSettings.queryField) ?? undefined\n          );\n        },\n        undefined\n      );\n\n      if (!timeField || !timeField.values || timeField.values.length === 0) {\n        return [now, descriptionText, clockNoValueText];\n      }\n\n      let descriptionFieldValues = descriptionField?.values\n        ? [...descriptionField?.values]\n        : new Array(timeField.values.length);\n      let fieldValues: Array<{ time: MomentInput; description: string }> = timeField.values.map((value, index) => {\n        return { time: value, description: descriptionFieldValues[index] };\n      });\n\n      let values: QueryRow[] = fieldValues.reduce((acc: QueryRow[], row) => {\n        if (row.time !== null && row.time !== undefined && !Number.isNaN(row.time)) {\n          acc.push({ time: moment(row.time), description: row.description });\n        }\n        return acc;\n      }, []);\n\n      let sortedValues = (v: QueryRow[]): QueryRow[] => {\n        return v.sort((a, b) => a.time.diff(b.time));\n      };\n\n      let finalValue:\n        | {\n            time: moment.Moment | null;\n            description: string;\n          }\n        | undefined = undefined;\n      switch (clockSettings.queryCalculation) {\n        case QueryCalculation.lastNotNull:\n          finalValue = values.length > 0 ? values.at(-1) : undefined;\n          break;\n        case QueryCalculation.last:\n          finalValue =\n            fieldValues.length > 0\n              ? {\n                  ...fieldValues[fieldValues.length - 1],\n                  time: fieldValues[fieldValues.length - 1]?.time\n                    ? moment(fieldValues[fieldValues.length - 1]?.time)\n                    : null,\n                }\n              : undefined;\n          break;\n        case QueryCalculation.firstNotNull:\n          finalValue = values.length > 0 ? values[0] : undefined;\n          break;\n        case QueryCalculation.first:\n          finalValue =\n            fieldValues.length > 0\n              ? { ...fieldValues[0], time: fieldValues[0].time ? moment(fieldValues[0].time) : null }\n              : undefined;\n          break;\n        case QueryCalculation.min:\n          finalValue = values.length > 0 ? sortedValues(values)[0] : undefined;\n          break;\n        case CountdownQueryCalculation.minFuture:\n          values = values.filter((v: QueryRow) => v.time.isAfter(now));\n          finalValue = values.length > 0 ? sortedValues(values)[0] : undefined;\n          break;\n        case QueryCalculation.max:\n          finalValue = values.length > 0 ? sortedValues(values).at(-1) : undefined;\n          break;\n        case CountupQueryCalculation.maxPast:\n          values = values.filter((v: QueryRow) => v.time.isBefore(now));\n          finalValue = values.length > 0 ? sortedValues(values).at(-1) : undefined;\n          break;\n        default:\n          console.error('Invalid query calculation', clockSettings.queryCalculation);\n          return [now, descriptionText, clockNoValueText];\n      }\n\n      targetTime = finalValue?.time;\n      if (options.descriptionSettings.source === DescriptionSource.query) {\n        descriptionText = finalValue?.description ?? descriptionNoValueText;\n      }\n      break;\n  }\n\n  if (targetTime === undefined) {\n    return [now, descriptionText, clockNoValueText];\n  }\n  if (targetTime === null || !targetTime.isValid()) {\n    return [now, descriptionText, clockInvalidValueText];\n  }\n  return [targetTime, descriptionText, null];\n}\n","import { PanelOptionsEditorBuilder, dateTime, SelectableValue, StandardEditorContext, Field } from '@grafana/data';\n\nimport {\n  ClockOptions,\n  ClockMode,\n  ClockType,\n  FontWeight,\n  ZoneFormat,\n  ClockRefresh,\n  ClockSource,\n  CountdownQueryCalculation,\n  CountupQueryCalculation,\n  DescriptionSource,\n} from './types';\nimport { ColorEditor } from './ColorEditor';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { getTimeZoneNames } from 'utils';\n\nexport const optionsBuilder = (\n  builder: PanelOptionsEditorBuilder<ClockOptions>,\n  context: StandardEditorContext<ClockOptions>\n) => {\n  // Global options\n  builder\n    .addRadio({\n      path: 'mode',\n      name: 'Mode',\n      settings: {\n        options: [\n          { value: ClockMode.time, label: 'Time' },\n          { value: ClockMode.countdown, label: 'Countdown' },\n          { value: ClockMode.countup, label: 'Countup' },\n        ],\n      },\n      defaultValue: ClockMode.time,\n    })\n    .addRadio({\n      path: 'refresh',\n      name: 'Refresh',\n      settings: {\n        options: [\n          { value: ClockRefresh.sec, label: 'Every second' },\n          { value: ClockRefresh.dashboard, label: 'With the dashboard' },\n        ],\n      },\n      defaultValue: ClockRefresh.sec,\n    })\n    .addCustomEditor({\n      id: 'bgColor',\n      path: 'bgColor',\n      name: 'Background Color',\n      editor: ColorEditor,\n      defaultValue: '',\n    })\n    .addBooleanSwitch({\n      path: 'fontMono',\n      name: 'Font monospace',\n      defaultValue: false,\n    });\n\n  addCountdown(builder);\n  addCountup(builder);\n  addDescription(builder);\n  addTimeFormat(builder);\n  addTimeZone(builder);\n  addDateFormat(builder);\n};\n\n//---------------------------------------------------------------------\n// COUNTDOWN\n//---------------------------------------------------------------------\nfunction addCountdown(builder: PanelOptionsEditorBuilder<ClockOptions>) {\n  const category = ['Countdown'];\n\n  builder\n    .addRadio({\n      category,\n      path: 'countdownSettings.source',\n      name: 'Source',\n      settings: {\n        options: [\n          { value: ClockSource.input, label: 'Input' },\n          { value: ClockSource.query, label: 'Query' },\n        ],\n      },\n      defaultValue: ClockSource.input,\n      showIf: (o) => o.mode === ClockMode.countdown,\n    })\n    .addTextInput({\n      category,\n      path: 'countdownSettings.endCountdownTime',\n      name: 'End Time',\n      settings: {\n        placeholder: 'ISO 8601 or RFC 2822 Date time',\n      },\n      defaultValue: dateTime(Date.now()).add(6, 'h').format(),\n      showIf: (o) => o.mode === ClockMode.countdown && o.countdownSettings.source === ClockSource.input,\n    })\n    .addSelect({\n      category,\n      path: 'countdownSettings.queryCalculation',\n      name: 'Calculation',\n      description: 'How to calculate the countdown time',\n      settings: {\n        options: [\n          {\n            value: CountdownQueryCalculation.lastNotNull,\n            label: 'Last *',\n            description: 'Last non-null value (also excludes NaNs)',\n          },\n          { value: CountdownQueryCalculation.last, label: 'Last', description: 'Last value' },\n          {\n            value: CountdownQueryCalculation.firstNotNull,\n            label: 'First *',\n            description: 'First non-null value (also excludes NaNs)',\n          },\n          { value: CountdownQueryCalculation.first, label: 'First', description: 'First value' },\n          { value: CountdownQueryCalculation.min, label: 'Min', description: 'Minimum value' },\n          {\n            value: CountdownQueryCalculation.minFuture,\n            label: 'Min Future',\n            description: 'Minimum value that is in the future',\n          },\n          { value: CountdownQueryCalculation.max, label: 'Max', description: 'Maximum value' },\n        ],\n      },\n      defaultValue: CountdownQueryCalculation.last,\n      showIf: (o) => o.mode === ClockMode.countdown && o.countdownSettings.source === ClockSource.query,\n    })\n    .addFieldNamePicker({\n      category,\n      path: 'countdownSettings.queryField',\n      name: 'Field',\n      settings: {\n        noFieldsMessage: 'No fields found',\n      },\n      showIf: (o) => o.mode === ClockMode.countdown && o.countdownSettings.source === ClockSource.query,\n    })\n    .addTextInput({\n      category,\n      path: 'countdownSettings.endText',\n      name: 'End Text',\n      defaultValue: '00:00:00',\n      showIf: (o) => o.mode === ClockMode.countdown,\n    })\n    .addTextInput({\n      category,\n      path: 'countdownSettings.noValueText',\n      name: 'No Value Text',\n      defaultValue: 'no value found',\n      showIf: (o) => o.mode === ClockMode.countdown,\n    })\n    .addTextInput({\n      category,\n      path: 'countdownSettings.invalidValueText',\n      name: 'Invalid Value Text',\n      defaultValue: 'invalid value',\n      showIf: (o) => o.mode === ClockMode.countdown,\n    })\n    .addTextInput({\n      category,\n      path: 'countdownSettings.customFormat',\n      name: 'Custom format',\n      settings: {\n        placeholder: 'optional',\n      },\n      defaultValue: undefined,\n      showIf: (o) => o.mode === ClockMode.countdown,\n    });\n}\n\n//---------------------------------------------------------------------\n// COUNTUP\n//---------------------------------------------------------------------\nfunction addCountup(builder: PanelOptionsEditorBuilder<ClockOptions>) {\n  const category = ['Countup'];\n\n  builder\n    .addRadio({\n      category,\n      path: 'countupSettings.source',\n      name: 'Source',\n      settings: {\n        options: [\n          { value: ClockSource.input, label: 'Input' },\n          { value: ClockSource.query, label: 'Query' },\n        ],\n      },\n      defaultValue: ClockSource.input,\n      showIf: (o) => o.mode === ClockMode.countup,\n    })\n    .addTextInput({\n      category,\n      path: 'countupSettings.beginCountupTime',\n      name: 'Begin Time',\n      settings: {\n        placeholder: 'ISO 8601 or RFC 2822 Date time',\n      },\n      defaultValue: dateTime(Date.now()).add(6, 'h').format(),\n      showIf: (o) => o.mode === ClockMode.countup && o.countupSettings.source === ClockSource.input,\n    })\n    .addSelect({\n      category,\n      path: 'countupSettings.queryCalculation',\n      name: 'Calculation',\n      description: 'How to calculate the countup time',\n      settings: {\n        options: [\n          {\n            value: CountupQueryCalculation.lastNotNull,\n            label: 'Last *',\n            description: 'Last non-null value (also excludes NaNs)',\n          },\n          { value: CountupQueryCalculation.last, label: 'Last', description: 'Last value' },\n          {\n            value: CountupQueryCalculation.firstNotNull,\n            label: 'First *',\n            description: 'First non-null value (also excludes NaNs)',\n          },\n          { value: CountupQueryCalculation.first, label: 'First', description: 'First value' },\n          { value: CountupQueryCalculation.min, label: 'Min', description: 'Minimum value' },\n          { value: CountupQueryCalculation.max, label: 'Max', description: 'Maximum value' },\n          {\n            value: CountupQueryCalculation.maxPast,\n            label: 'Max Past',\n            description: 'Maximum value that is in the past',\n          },\n        ],\n      },\n      defaultValue: CountupQueryCalculation.last,\n      showIf: (o) => o.mode === ClockMode.countup && o.countupSettings.source === ClockSource.query,\n    })\n    .addFieldNamePicker({\n      category,\n      path: 'countupSettings.queryField',\n      name: 'Field',\n      settings: {\n        noFieldsMessage: 'No fields found',\n      },\n      showIf: (o) => o.mode === ClockMode.countup && o.countupSettings.source === ClockSource.query,\n    })\n    .addTextInput({\n      category,\n      path: 'countupSettings.beginText',\n      name: 'Begin Text',\n      defaultValue: '00:00:00',\n      showIf: (o) => o.mode === ClockMode.countup,\n    })\n    .addTextInput({\n      category,\n      path: 'countupSettings.noValueText',\n      name: 'No Value Text',\n      defaultValue: 'no value found',\n      showIf: (o) => o.mode === ClockMode.countup,\n    })\n    .addTextInput({\n      category,\n      path: 'countupSettings.invalidValueText',\n      name: 'Invalid Value Text',\n      defaultValue: 'invalid value',\n      showIf: (o) => o.mode === ClockMode.countup,\n    })\n    .addTextInput({\n      category,\n      path: 'countupSettings.customFormat',\n      name: 'Custom format',\n      settings: {\n        placeholder: 'optional',\n      },\n      defaultValue: undefined,\n      showIf: (o) => o.mode === ClockMode.countup,\n    });\n}\n\n//---------------------------------------------------------------------\n// DESCRIPTION\n//---------------------------------------------------------------------\nfunction addDescription(builder: PanelOptionsEditorBuilder<ClockOptions>) {\n  const category = ['Description'];\n\n  builder\n    .addRadio({\n      category,\n      path: 'descriptionSettings.source',\n      name: 'Source',\n      settings: {\n        options: [\n          { value: DescriptionSource.none, label: 'None' },\n          { value: DescriptionSource.input, label: 'Input' },\n        ],\n      },\n      defaultValue: DescriptionSource.none,\n      showIf: (o) => {\n        let show =\n          (o.mode === ClockMode.countup && o.countupSettings.source !== ClockSource.query) ||\n          (o.mode === ClockMode.countdown && o.countdownSettings.source !== ClockSource.query) ||\n          o.mode === ClockMode.time;\n\n        if (show && o.descriptionSettings.source === DescriptionSource.query) {\n          o.descriptionSettings.source = DescriptionSource.none;\n        }\n\n        return show;\n      },\n    })\n    .addRadio({\n      category,\n      path: 'descriptionSettings.source',\n      name: 'Source',\n      settings: {\n        options: [\n          { value: DescriptionSource.none, label: 'None' },\n          { value: DescriptionSource.input, label: 'Input' },\n          { value: DescriptionSource.query, label: 'Query' },\n        ],\n      },\n      defaultValue: DescriptionSource.none,\n      showIf: (o) =>\n        (o.mode === ClockMode.countup && o.countupSettings.source === ClockSource.query) ||\n        (o.mode === ClockMode.countdown && o.countdownSettings.source === ClockSource.query),\n    })\n    .addTextInput({\n      category,\n      path: 'descriptionSettings.descriptionText',\n      name: 'Description',\n      settings: {\n        placeholder: 'Enter description',\n      },\n      defaultValue: '',\n      showIf: (o) => o.descriptionSettings.source === DescriptionSource.input,\n    })\n    .addFieldNamePicker({\n      category,\n      path: 'descriptionSettings.queryField',\n      name: 'Field',\n      settings: {\n        filter: (f: Field) => f.type === 'string',\n        noFieldsMessage: 'No fields found',\n      },\n      showIf: (o) => o.descriptionSettings.source === DescriptionSource.query,\n    })\n    .addTextInput({\n      category,\n      path: 'descriptionSettings.noValueText',\n      name: 'No Value Text',\n      defaultValue: 'no description found',\n      showIf: (o) => o.descriptionSettings.source === DescriptionSource.query,\n    })\n    .addTextInput({\n      category,\n      path: 'descriptionSettings.fontSize',\n      name: 'Font size',\n      settings: {\n        placeholder: 'Font size (e.g. 12px)',\n      },\n      defaultValue: '12px',\n    })\n    .addRadio({\n      category,\n      path: 'descriptionSettings.fontWeight',\n      name: 'Font weight',\n      settings: {\n        options: [\n          { value: FontWeight.normal, label: 'Normal' },\n          { value: FontWeight.bold, label: 'Bold' },\n        ],\n      },\n      defaultValue: FontWeight.normal,\n    });\n}\n\n//---------------------------------------------------------------------\n// TIME FORMAT\n//---------------------------------------------------------------------\nfunction addTimeFormat(builder: PanelOptionsEditorBuilder<ClockOptions>) {\n  const category = ['Time Format'];\n\n  builder\n    .addRadio({\n      category,\n      path: 'clockType',\n      name: 'Clock Type',\n      settings: {\n        options: [\n          { value: ClockType.H24, label: '24 Hour' },\n          { value: ClockType.H12, label: '12 Hour' },\n          { value: ClockType.Custom, label: 'Custom' },\n        ],\n      },\n      defaultValue: ClockType.H24,\n    })\n    .addTextInput({\n      category,\n      path: 'timeSettings.customFormat',\n      name: 'Time Format',\n      description: 'the date formatting pattern',\n      settings: {\n        placeholder: 'date format',\n      },\n      defaultValue: undefined,\n      showIf: (opts) => opts.clockType === ClockType.Custom,\n    })\n    .addTextInput({\n      category,\n      path: 'timeSettings.fontSize',\n      name: 'Font size',\n      settings: {\n        placeholder: 'Font size (e.g. 12px)',\n      },\n      defaultValue: '12px',\n    })\n    .addRadio({\n      category,\n      path: 'timeSettings.fontWeight',\n      name: 'Font weight',\n      settings: {\n        options: [\n          { value: FontWeight.normal, label: 'Normal' },\n          { value: FontWeight.bold, label: 'Bold' },\n        ],\n      },\n      defaultValue: FontWeight.normal,\n    });\n}\n\nfunction getVariableOptions() {\n  return getTemplateSrv()\n    .getVariables()\n    .map((t) => {\n      const value = '${' + t.name + '}';\n      const info: SelectableValue<string> = {\n        label: value,\n        value,\n        icon: 'arrow-right',\n      };\n      return info;\n    });\n}\n\n//---------------------------------------------------------------------\n// TIMEZONE\n//---------------------------------------------------------------------\nfunction addTimeZone(builder: PanelOptionsEditorBuilder<ClockOptions>) {\n  const category = ['Timezone'];\n\n  const timezones = [\n    { label: 'Browser Time', value: '' },\n    { label: 'Same as Dashboard', value: 'dashboard' },\n    ...getTimeZoneNames().map((n) => {\n      return { label: n, value: n };\n    }),\n  ];\n\n  builder\n    .addSelect({\n      category,\n      path: 'timezone',\n      name: 'Timezone',\n      settings: {\n        options: timezones,\n        getOptions: async () => {\n          const opts = getVariableOptions();\n          if (opts.length) {\n            return [...opts, ...timezones];\n          }\n          return timezones;\n        },\n      },\n      defaultValue: '',\n    })\n    .addBooleanSwitch({\n      category,\n      path: 'timezoneSettings.showTimezone',\n      name: 'Show Timezone',\n      defaultValue: false,\n    })\n    .addSelect({\n      category,\n      path: 'timezoneSettings.zoneFormat',\n      name: 'Display Format',\n      settings: {\n        options: [\n          { value: ZoneFormat.name, label: 'Normal' },\n          { value: ZoneFormat.nameOffset, label: 'Name + Offset' },\n          { value: ZoneFormat.offsetAbbv, label: 'Offset + Abbreviation' },\n          { value: ZoneFormat.offset, label: 'Offset' },\n          { value: ZoneFormat.abbv, label: 'Abbreviation' },\n        ],\n      },\n      defaultValue: ZoneFormat.offsetAbbv,\n      showIf: (s) => s.timezoneSettings?.showTimezone,\n    })\n    .addTextInput({\n      category,\n      path: 'timezoneSettings.fontSize',\n      name: 'Font size',\n      settings: {\n        placeholder: 'font size',\n      },\n      defaultValue: '12px',\n      showIf: (s) => s.timezoneSettings?.showTimezone,\n    })\n    .addRadio({\n      category,\n      path: 'timezoneSettings.fontWeight',\n      name: 'Font weight',\n      settings: {\n        options: [\n          { value: FontWeight.normal, label: 'Normal' },\n          { value: FontWeight.bold, label: 'Bold' },\n        ],\n      },\n      defaultValue: FontWeight.normal,\n      showIf: (s) => s.timezoneSettings?.showTimezone,\n    });\n}\n\n//---------------------------------------------------------------------\n// DATE FORMAT\n//---------------------------------------------------------------------\nfunction addDateFormat(builder: PanelOptionsEditorBuilder<ClockOptions>) {\n  const category = ['Date Options'];\n\n  builder\n    .addBooleanSwitch({\n      category,\n      path: 'dateSettings.showDate',\n      name: 'Show Date',\n      defaultValue: false,\n    })\n    .addTextInput({\n      category,\n      path: 'dateSettings.dateFormat',\n      name: 'Date Format',\n      settings: {\n        placeholder: 'Enter date format',\n      },\n      defaultValue: 'YYYY-MM-DD',\n      showIf: (s) => s.dateSettings?.showDate,\n    })\n    .addTextInput({\n      category,\n      path: 'dateSettings.locale',\n      name: 'Locale',\n      settings: {\n        placeholder: 'Enter locale: de, fr, es, ... (default: en)',\n      },\n      defaultValue: '',\n      showIf: (s) => s.dateSettings?.showDate,\n    })\n    .addTextInput({\n      category,\n      path: 'dateSettings.fontSize',\n      name: 'Font size',\n      settings: {\n        placeholder: 'date format',\n      },\n      defaultValue: '20px',\n      showIf: (s) => s.dateSettings?.showDate,\n    })\n    .addRadio({\n      category,\n      path: 'dateSettings.fontWeight',\n      name: 'Font weight',\n      settings: {\n        options: [\n          { value: FontWeight.normal, label: 'Normal' },\n          { value: FontWeight.bold, label: 'Bold' },\n        ],\n      },\n      defaultValue: FontWeight.normal,\n      showIf: (s) => s.dateSettings?.showDate,\n    });\n}\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__89__","__WEBPACK_EXTERNAL_MODULE__308__","tz","load","__WEBPACK_EXTERNAL_MODULE__468__","__WEBPACK_EXTERNAL_MODULE__531__","root","factory","this","moment","undefined","version","default","cachedGuess","zones","links","countries","names","guesses","logError","momentVersion","split","major","minor","charCodeToInt","charCode","unpackBase60","string","i","parts","whole","fractional","multiplier","out","sign","charCodeAt","length","arrayToInt","array","mapIndices","source","indices","unpack","data","offsets","untils","Math","round","Infinity","intToUntil","name","abbrs","population","Zone","packedString","_set","Country","country_name","zone_names","OffsetAt","at","timeString","toTimeString","abbr","match","join","offset","getTimezoneOffset","ZoneScore","zone","offsetScore","abbrScore","findChange","low","high","mid","diff","Date","sortZoneScores","a","b","localeCompare","addToGuesses","guessesForUserOffsets","j","guessesOffset","offsetsLength","filteredGuesses","checkedOffsets","hasOwnProperty","push","rebuildGuess","intlName","Intl","DateTimeFormat","resolvedOptions","timeZone","normalizeName","e","zoneScore","change","next","nextOffset","startYear","getFullYear","last","lastOffset","userOffsets","zoneScores","getZone","scoreOffsetAt","sort","toLowerCase","replace","addZone","packed","normalized","caller","link","addLink","aliases","alias","normal0","normal1","needsOffset","m","isUnixTimestamp","_f","_a","_tzm","message","console","error","input","args","Array","prototype","slice","call","arguments","utc","apply","isMoment","add","parse","unpacked","_index","timestamp","num","arr","len","lo","hi","floor","closest","zone_name","Object","keys","filter","country_code","indexOf","offsetNext","offsetPrev","target","max","moveAmbiguousForward","moveInvalidForward","mom","utcOffset","offsetAt","abs","dataVersion","_zones","_links","_names","_countries","country_zones","toUpperCase","addCountries","zoneExists","didShowError","guess","ignoreCache","zonesForCountry","country","with_offset","map","old","fn","abbrWrap","_z","resetZoneWrap","defaultZone","updateOffset","keepTime","_isUTC","isValid","_d","z","Error","zoneName","zoneAbbr","local","setDefault","momentProperties","toString","toLocaleStringWorks","toLocaleStringRoundingWorks","types","bubbles","type","targets","value","stringIncludes","str","search","repeatZero","qty","result","formatNumber","number","options","userLocale","integerString","fractionString","exponentString","useToLocaleString","useGrouping","grouping","maximumSignificantDigits","minimumIntegerDigits","fractionDigits","groupingSeparator","decimalSeparator","localeStringOptions","maximumFractionDigits","minimumFractionDigits","roundingOptions","extend","parseFloat","toLocaleString","temp","toPrecision","toFixed","integerLength","fractionLength","digitCount","digits","digitsArray","reverse","carry","parseInt","stringRound","exponent","group","formattedString","shift","durationLabelCompare","label","passed","engLocale","durationLabelsStandard","S","SS","s","ss","mm","h","hh","d","dd","w","ww","M","MM","y","yy","durationLabelsShort","durationTimeTemplates","HMS","HM","MS","durationLabelTypes","durationPluralKey","token","integerValue","decimalValue","isArray","isObject","obj","find","callback","index","item","each","ret","pluck","prop","compact","unique","intersection","_b","rest","key","any","durationsFormat","durations","settings","arg","precision","template","returnMomentTypes","formattedDurations","dur","format","outputTypes","child","concat","largest","durationFormat","defaults","asMilliseconds","asMonths","isNegative","remainder","duration","remainderMonths","momentTokens","years","months","weeks","days","hours","minutes","seconds","milliseconds","tokenDefs","escape","general","typeMap","test","tokenizer","RegExp","stopTrim","localeData","_durationTimeTemplates","locale","useLeftUnits","usePlural","forceLength","trunc","useSignificantDigits","significantDigits","significantDigitsCache","minValue","isMinValue","maxValue","isMaxValue","trim","trimIncludes","rBoth","rAll","trimLarge","trimSmall","trimMid","trimFinal","rawTokens","text","currentToken","tokens","momentTypes","momentType","rawValue","isSmallest","isLargest","as","wholeValue","subtract","tokenLength","truncMethod","truncate","places","factor","pow","foundFirst","bubbled","formatValue","formatOptions","formattedValue","formattedValueEn","formattedValueMS","findType","bubble","bubbleMomentType","targetMomentType","outputType","values","pluralKey","labels","localeDataKey","labelType","labelKey","durationGetLabels","autoLocalized","pluralizedLabels","_durationLabelTypes","defaultFormatTemplate","_data","firstType","lastType","findLast","init","context","updateLocale","toLocaleStringSupportsLocales","define","momentDurationFormatSetup","__WEBPACK_EXTERNAL_MODULE__781__","__WEBPACK_EXTERNAL_MODULE__959__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","definition","o","defineProperty","enumerable","get","r","Symbol","toStringTag","p","lastIndexOf","ClockSource","DescriptionSource","QueryCalculation","lastNotNull","firstNotNull","first","min","CountdownQueryCalculation","minFuture","CountupQueryCalculation","maxPast","ClockMode","ClockRefresh","ClockType","ZoneFormat","FontWeight","RenderDate","now","dateSettings","className","useMemo","css","fontSize","fontWeight","fontMono","display","dateFormat","span","h3","RenderTime","targetTime","err","clockType","timeSettings","mode","h2","countdown","countdownSettings","timeDiff","asSeconds","endText","customFormat","formattedTimeLeft","previous","getCountdownText","countup","countupSettings","beginText","formattedTimePassed","getCountupText","Custom","H12","getTimeFormat","getTimeZoneNames","getMoment","getTemplateSrv","RenderZone","timezone","timezoneSettings","zoneFormat","offsetAbbv","abbv","h4","data-testid","nameOffset","br","RenderDescription","descriptionText","descriptionSettings","ColorEditor","props","styles","getStyles","config","theme","prefix","suffix","Icon","trashIcon","onClick","onChange","div","inputPrefix","colorPicker","ColorPicker","color","colors","panelBg","enableNamedColors","Input","readOnly","stylesFactory","spacing","sm","textWeak","detectInputOnlyPluginConfig","panel","isInputOnly","migrateInputOnlyPluginConfig","datasource","datasources","grafanaDs","datasourceKey","ds","uid","refId","queryType","cleanupConfig","refreshSettings","plugin","PanelPlugin","width","height","useTheme2","optionsTimezone","dashboardTimezone","timezoneToUse","setNow","useState","bgColor","visualization","getColorByName","background","primary","useEffect","refresh","dashboard","sec","timer","setInterval","clearInterval","replaceVariables","descriptionNoValueText","noValueText","query","clockSettings","userInputTime","endCountdownTime","beginCountupTime","clockNoValueText","clockInvalidValueText","invalidValueText","isDataReady","state","series","isQueryFieldSelected","queryField","timeField","reduce","foundField","fields","field","descriptionField","finalValue","descriptionFieldValues","fieldValues","time","description","acc","row","Number","isNaN","sortedValues","v","queryCalculation","isAfter","isBefore","CalculateClockOptions","style","showDate","showTimezone","none","setNoPadding","setMigrationHandler","syncWithDashboard","setPanelOptions","builder","addRadio","path","defaultValue","addCustomEditor","id","editor","addBooleanSwitch","category","showIf","addTextInput","placeholder","dateTime","addSelect","addFieldNamePicker","noFieldsMessage","addCountdown","addCountup","show","f","normal","bold","addDescription","H24","opts","addTimeFormat","timezones","getOptions","getVariables","t","icon","addTimeZone","addDateFormat"],"sourceRoot":""}