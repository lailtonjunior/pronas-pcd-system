# Banco de dados
DATABASE_URL=postgresql://pronas_user:pronas_password@localhost:5432/pronas_pcd_db
DB_ECHO=false

# Redis
REDIS_URL=redis://:pronas_redis_password@localhost:6379/0

# JWT e Segurança
JWT_SECRET_KEY=pronas-pcd-jwt-secret-key-change-in-production
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=480
DEFAULT_ADMIN_PASSWORD=PronasPCD@2024!

# Regras de Negócio PRONAS/PCD
SUBMISSION_PERIOD_DAYS=45
MAX_PROJECTS_PER_INSTITUTION=3
MIN_CAPTACAO_PERCENTAGE=0.6
MAX_CAPTACAO_PERCENTAGE=1.2
MAX_CAPTACAO_ABSOLUTE=50000
CREDENTIALING_MONTHS=6,7
MIN_PROJECT_TIMELINE_MONTHS=6
MAX_PROJECT_TIMELINE_MONTHS=48

# IA e Performance
AI_MODEL_NAME=gpt-4-turbo
AI_CONFIDENCE_THRESHOLD=0.7
ENABLE_AI_GENERATION=true
CACHE_TTL_LONG=86400

# Arquivos
MAX_FILE_SIZE_MB=50
ALLOWED_FILE_EXTENSIONS=pdf,doc,docx,jpg,jpeg,png,zip
S3_ENDPOINT=http://localhost:9000
S3_ACCESS_KEY=pronas_minio_user
S3_SECRET_KEY=pronas_minio_password
S3_BUCKET_NAME=pronas-pcd-documents

# Sistema
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=INFO
LOG_FILE=logs/pronas_pcd.log
ALLOWED_ORIGINS=http://localhost:3000

# Frontend
NEXT_PUBLIC_API_URL=http://localhost:8000

---

# backend/Dockerfile
FROM python:3.11-slim

# Definir diretório de trabalho
WORKDIR /app

# Instalar dependências do sistema
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copiar arquivos de dependências
COPY requirements.txt .

# Instalar dependências Python
RUN pip install --no-cache-dir -r requirements.txt

# Copiar código da aplicação
COPY . .

# Criar diretório de logs
RUN mkdir -p logs

# Expor porta
EXPOSE 8000

# Criar usuário não-root
RUN adduser --disabled-password --gecos '' appuser && chown -R appuser:appuser /app
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Comando para iniciar a aplicação
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]
